{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\framework\\modules/assets\\framework\\modules\\GameNet.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\framework\\modules","sourcesContent":["﻿import NetMgr, { G_NETTYPE } from \"../net/NetMgr\";\r\nimport NetErrMgr from \"../net/NetErrMgr\";\r\nimport LogMgr from \"./LogMgr\";\r\nimport Emitter from \"./Emitter\";\r\nimport Package from \"../net/package\";\r\nimport ServerMgr from \"./ServerMgr\";\r\n\r\ninterface SvrData {\r\n\thost: string,\r\n\tport: string,\r\n}\r\n\r\nexport default class GameNet {\r\n\tprivate static _instance: GameNet = new GameNet();\r\n\tpublic static getInstance(): GameNet {\r\n\t\treturn GameNet._instance;\r\n\t}\r\n\tprivate _serverCfg: any;\r\n\tprivate _connectorHost: string;\r\n\tprivate _connectorPort: string;\r\n\tprivate _gateHost: string;\r\n\tprivate _gatePort: string;\r\n\tprivate _dataSvrUrl: string;\r\n\tprivate _platSvrUrl: string;\r\n\tprivate _uid: number;\r\n\tprivate _serverDelay: number;\r\n\r\n\tpublic setServerCfg(): void {\r\n\t\tthis._serverCfg = ServerMgr.getInstance().getServerCfg();\r\n\t\tif (~this._serverCfg.platSvrHost.indexOf('.com')) {\r\n\t\t\tthis._platSvrUrl = this._serverCfg.platSvrHost;\r\n\t\t} else {\r\n\t\t\tthis._platSvrUrl = `http://${this._serverCfg.platSvrHost}:${this._serverCfg.platSvrPort}/index`;\r\n\t\t}\r\n\t\tthis._gateHost = this._serverCfg.gameSvrHost;\r\n\t\tthis._gatePort = this._serverCfg.gameSvrPort;\r\n\t\tthis._dataSvrUrl = `http://${this._serverCfg.dataSvrHost}:${this._serverCfg.dataSvrPort}`;\r\n\t}\r\n\r\n\tpublic setUid(id: number) {\r\n\t\tthis._uid = id;\r\n\t}\r\n\r\n\tpublic getPlatSvrUrl(): string {\r\n\t\treturn this._platSvrUrl;\r\n\t}\r\n\r\n\tpublic getGateSvrData(): SvrData {\r\n\t\treturn { host: this._gateHost, port: this._gatePort };\r\n\t}\r\n\r\n\tpublic setConnectSvrData(data: SvrData): void {\r\n\t\tthis._connectorHost = data.host;\r\n\t\tthis._connectorPort = data.port;\r\n\t}\r\n\r\n\tpublic getConnectSvrData(): SvrData {\r\n\t\treturn { host: this._connectorHost, port: this._connectorPort };\r\n\t}\r\n\r\n\tpublic setServerDelay(dt: number): void {\r\n\t\tthis._serverDelay = dt;\r\n\t}\r\n\r\n\tpublic getServerDelay(): number {\r\n\t\treturn this._serverDelay;\r\n\t}\r\n\r\n\tpublic send_msg(route: string, msg: any = {}): void {\r\n\t\t// 拼装数据,绑定消息id\r\n\t\tif (route === \"\") return console.error(\"route不能为空!\");\r\n\t\tlet { serverType, msg: newmsg } = NetMgr.getInstance().convertMsg(route, msg);\r\n\t\tswitch (serverType) {\r\n\t\t\tcase G_NETTYPE.http: // http\r\n\t\t\t\tthis._httpReq(route, newmsg);\r\n\t\t\t\tbreak;\r\n\t\t\tcase G_NETTYPE.pomelo: // pomelo\r\n\t\t\t\tthis._pomeloReq(route, newmsg);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t// 重发消息\r\n\tpublic reSendMsgs(records): void {\r\n\t\tfor (let i = 0; i < records.length; ++i) {\r\n\t\t\tlet { serverType, route, msg } = records[i];\r\n\t\t\tswitch (serverType) {\r\n\t\t\t\tcase G_NETTYPE.http: // http\r\n\t\t\t\t\tthis._httpReq(route, msg);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase G_NETTYPE.pomelo: // pomelo\r\n\t\t\t\t\tthis._pomeloReq(route, msg);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// http\r\n\tprivate _httpReq(route: string, msg: any): void {\r\n\t\tlet xhr = cc.loader.getXMLHttpRequest();\r\n\t\txhr.onreadystatechange = () => {\r\n\t\t\tif (xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)) {\r\n\t\t\t\tlet res = JSON.parse(xhr.responseText);\r\n\t\t\t\tthis._msgCb(res.route, res.code, res);\r\n\t\t\t}\r\n\t\t}\r\n\t\txhr.timeout = 3000;\r\n\t\txhr.onerror = (err) => {\r\n\t\t\tconsole.error(\"http请求出错!\");\r\n\t\t}\r\n\t\txhr.ontimeout = () => {\r\n\t\t\tconsole.error(\"http请求超时!\");\r\n\t\t}\r\n\t\t// xhr.open(\"POST\", this._platSvrUrl, true);\r\n\t\txhr.open(\"POST\", this._dataSvrUrl, true);\r\n\t\txhr.send(msg);\r\n\t\tLogMgr.getInstance().addRequire(route);\r\n\t\tconsole.log(\"发送了http=\", route, msg);\r\n\t}\r\n\t//tcp请求\r\n\tprivate _pomeloReq(route: string, msg: any): void {\r\n\t\tpomelo.request(route, msg);\r\n\t\tLogMgr.getInstance().addRequire(route);\r\n\t\tconsole.log(\"发送了pomelo=\", route, msg);\r\n\t}\r\n\t// 推送网络消息\r\n\tprivate _emit(route: string, msg: Package): void {\r\n\t\tEmitter.getInstance().dealNetRoute(route, msg);\r\n\t\tEmitter.getInstance().emit(route, msg);\r\n\t}\r\n\r\n\tprivate _msgCb(route: string, code: number, data: any): void {\r\n\t\tconsole.log(`收到服务器回复=${route}`, JSON.stringify(data));\r\n\t\tNetMgr.getInstance().doneWithRoute(route);\r\n\t\t//记录到操作log中\r\n\t\tLogMgr.getInstance().addRespond(route);\r\n\r\n\t\tif (code != null && NetErrMgr.getInstance().dealWithError(code)) return;\r\n\r\n\t\tlet pack = new Package(data);\r\n\t\tconsole.log(\"广播消息-\", route);\r\n\t\t// 广播网络消息 \r\n\t\tthis._emit(route, pack);\r\n\t}\r\n\r\n\tpublic connect(host, port, connectcb): void {\r\n\t\t//广播连接事件 \r\n\t\tlet cfg = {\r\n\t\t\thost: host,\r\n\t\t\tport: port,\r\n\t\t\tdebug: true,\r\n\t\t\tmsgcb: this._msgCb.bind(this),\r\n\t\t\tconnectcb: connectcb,\r\n\t\t}\r\n\t\tconsole.log(`连接地址=${host}:${port}`);\r\n\t\tpomelo.init(cfg)\r\n\t\t//告诉网络管理pomelo开始连接\r\n\t\tNetMgr.getInstance().pomeloConnecting();\r\n\t}\r\n\r\n\tpublic disconnect(): void {\r\n\t\tpomelo.disconnect()\r\n\t}\r\n\r\n\tpublic clear(): void {\r\n\t\tNetMgr.getInstance().clearTimer();\r\n\t\tpomelo.clearListener();\r\n\t\tpomelo.disconnect();\r\n\t}\r\n}\r\n\r\n\r\n"]}