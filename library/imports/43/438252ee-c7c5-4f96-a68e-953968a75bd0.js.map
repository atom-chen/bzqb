{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\modules\\game\\script/assets\\modules\\game\\script\\fightMissileMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\modules\\game\\script","sourcesContent":["import Emitter from \"../../../framework/modules/Emitter\";\nimport ShootData from \"./modles/ShootData\";\nimport fightBaseMissile from \"./missile/fightBaseMissile\";\nimport config from \"./common/gameConfig\";\nimport boomCollider from \"./physics/boomCollider\";\n\n/*\nauthor: 黄凯\n日期:2018-11-19\n*/\n\nlet emitter = Emitter.getInstance();\n\n// 预制体关键字对应的索引值\nconst { missileType ,fightEvent ,netFrame } = config;\n\n// 子弹管理器\nexport default class fightMissileMgr {\n\t// minNum:number;\n\t// 导弹的预制体数组\n\tprefabObj:cc.Prefab[];\n\t// 导弹出生的父节点\n\tfatherNode:cc.Node;\n\t// 当前活着的导弹们\n\tnowLiveMissile:any;\n\tconstructor() {\n\t\tthis.prefabObj = [];\n\t\tthis.fatherNode = null;\n\t\tthis.nowLiveMissile = [];\n\t}\n\n\t// 初始化\n\tinit(prefabs:cc.Prefab[], fatherNode:cc.Node) {\n\t\tthis.prefabObj = prefabs;\n\t\tthis.fatherNode = fatherNode;\n\t\t// 绑定射击事件\n\t\temitter.on(fightEvent.onMissileShoot, this.shoot, this);\n\t\t// 绑定死亡事件\n\t\temitter.on(fightEvent.onMissileDead, this.deadMissile, this);\n\n\t}\n\t\n\n\t// 射击方法\n\tshoot(shootData : ShootData) {\n\t\t// let index = this.getPrefabIndex(shootData.missileType);\n\t\t// 目前只有一种通常弹 和飞机\n\t\tconsole.log(\"发射炮弹\",shootData);\n\t\t\n\t\t// 三发\n\t\tfor(let i = 0 ; i < shootData.continuousFire ; i++){\n\t\t\t// 延迟秒数\n\t\t\tlet delar:number = i*(netFrame/2);\n\t\t\t// 分裂\n\t\t\tfor(let s = 0 ; s < shootData.divisionFire ; s++){\n\t\t\t\tlet shootPoi:any = null;\n\t\t\t\t// 连发分裂各自角度\n\t\t\t\tswitch(s){\n\t\t\t\t\tcase 0:\n\t\t\t\t\tshootPoi = shootData.shootPoi;\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\tshootPoi = new cc.Vec2(shootData.shootPoi.x,shootData.shootPoi.y).rotateSelf(0.1);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\tshootPoi = new cc.Vec2(shootData.shootPoi.x,shootData.shootPoi.y).rotateSelf(-0.1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// 浮点误差\n\t\t\t\tshootPoi.x = Math.round(shootPoi.x);\n\t\t\t\tshootPoi.y = Math.round(shootPoi.y);\n\n\t\t\t\tlet missileScript = this.getMissile( shootData.missileType );\n\t\t\t\tif(!missileScript){\n\t\t\t\t\tconsole.error(\"该炮弹的实例化有问题\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.nowLiveMissile.push(missileScript);\n\t\t\t\tthis.switchDifferenceMissile( missileScript , shootData , shootPoi, delar);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// 根据不同导弹切换\n\tswitchDifferenceMissile(missileScript:fightBaseMissile,shootData:any,shootPoi:any,delar:number){\n\t\tswitch (shootData.missileType) {\n\t\t\tcase missileType.normal:\n\t\t\t\tmissileScript.init(shootData,this.fatherNode,shootPoi,delar);\n\t\t\t\tbreak;\n\t\t\tcase missileType.plane:\n\t\t\t\tmissileScript.init(shootData,this.fatherNode,shootPoi,delar);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\t// 获取导弹实例化脚本\n\tgetMissile(missileType):fightBaseMissile{\n\t\tconsole.log(\"this.prefabObj[missileType]\",missileType,this.prefabObj[missileType])\n\t\tlet node:cc.Node = cc.instantiate(this.prefabObj[missileType]);\n\t\tlet script:fightBaseMissile = node.getComponent(fightBaseMissile);\n\t\treturn script;\n\t}\n\n\n\t// 获取所有活着的导弹\n\tgetAllLiveMissile(){\n\t\treturn this.nowLiveMissile;\n\t}\n\n\n\t// 导弹碰撞后的效果\n\tdeadMissile(missile:fightBaseMissile,isBoomType:boolean,isPlane:boolean = false) {\n\t\tlet index = this.nowLiveMissile.indexOf(missile);\n\n\t\tif(index !== -1){\n\t\t\tthis.nowLiveMissile.splice(index,1);\n\t\t}\n\t\t// TODO 删除子弹 播放特效\n\t\t// TODO 暂时没有做对象池\n\t\tmissile.node.destroy();\n\n\t\t// 如果碰撞的位置能够爆炸 形成爆炸效果 挖出弹坑\n\t\tif(isBoomType){\n\t        emitter.emit(fightEvent.colliderSettle,{\n\t        \t// 爆炸范围\n\t        \tellipseRange:missile.ellipseRange,\n\t        \t// 导弹类型 加血还是扣血\n\t        \tmissileBuffType:missile.missileBuffType,\n\t        \t// 威力\n\t        \tpower:missile.power,\n\t        \t// 爆炸的点位\n\t        \trealPoi:missile.getRealPoi(),\n\t        \t// 是否是飞机\n\t        \tisPlane:isPlane,\n\t        \t// 导弹所属玩家\n\t        \tseatId:missile.seatId\n\t        });\n\t    // 如果使用飞机的话\n\t\t}else if(isPlane){\n\t\t\temitter.emit(fightEvent.colliderSettle,{\n\t        \t// 爆炸的点位\n\t        \trealPoi:missile.getRealPoi(),\n\t        \t// 是否是飞机\n\t        \tisPlane:isPlane,\n\t        \t// 导弹所属玩家\n\t        \tseatId:missile.seatId\n\t        });\n\t\t}\n\t}\n\n\t// 池子里的子弹用完了\n\tspown(hasTeturn) {\n\t\t// let node = cc.instantiate(this.prefabObj);\n\t\t// let missileScript = node.getComponent(cc.baseNet);\n\t\t// missileScript.setBase(\n\t\t// \tthis.fatherNode,\n\t\t// \tthis.dead.bind(this),\n\t\t// \tthis.emitter);\n\t\t// if (hasTeturn) {\n\t\t// \treturn node;\n\t\t// } else {\n\t\t// \tthis.missilepool.put(node);\n\t\t// }\n\t\t// return null;\n\t}\n\n}"]}