{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\framework\\modules/assets\\framework\\modules\\Loader.ts"],"names":[],"mappings":";;;;;AAAA,UAAU;AACV;IAAA;IA+DA,CAAC;IA7DiB,kBAAW,GAAzB;QACI,OAAO,MAAM,CAAC,SAAS,CAAC;IAC5B,CAAC;IACD;;;OAGG;IACI,2BAAU,GAAjB,UAAkB,GAAW;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IACD;;;OAGG;IACI,0BAAS,GAAhB,UAAiB,GAAW;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IACD;;;OAGG;IACI,2BAAU,GAAjB,UAAkB,GAAW;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAEM,0BAAS,GAAhB,UAAiB,GAA6D;QACpE,IAAA,iBAAK,EAAE,uBAAQ,EAAE,uBAAQ,CAAS;QACxC,IAAI,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC;QAClC,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,EAAE,CAAC,EAAE;YACjC,IAAA,aAAwB,EAAtB,YAAG,EAAE,cAAI,CAAc;YAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;gBACzB,aAAa,EAAE,CAAC;gBAChB,QAAQ,CAAC,aAAa,GAAG,cAAc,CAAC,CAAC;gBACzC,IAAI,aAAa,KAAK,cAAc;oBAAE,QAAQ,EAAE,CAAC;YACrD,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAEM,wBAAO,GAAd,UAAe,GAAW,EAAE,IAAS;QACjC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,UAAC,GAAU,EAAE,IAAS;gBAC/C,IAAI,GAAG,EAAE;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;iBACf;qBAAM;oBACH,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAA;IACN,CAAC;IAEM,uBAAM,GAAb,UAAc,GAAW,EAAE,IAAS;QAChC,OAAO,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAEM,2BAAU,GAAjB,UAAkB,MAAgB;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACpC,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAC5B;IACL,CAAC;IA7Dc,gBAAS,GAAW,IAAI,MAAM,EAAE,CAAC;IA8DpD,aAAC;CA/DD,AA+DC,IAAA;kBA/DoB,MAAM","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\framework\\modules","sourcesContent":["/**加载管理 */\r\nexport default class Loader {\r\n    private static _instance: Loader = new Loader();\r\n    public static getInstance(): Loader {\r\n        return Loader._instance;\r\n    }\r\n    /**\r\n     * 加载预制\r\n     * @param url 预制路径\r\n     */\r\n    public loadPrefab(url: string): Promise<cc.Prefab> {\r\n        return this.loadRes(url, cc.Prefab);\r\n    }\r\n    /**\r\n     * 加载图片\r\n     * @param url 图片路径\r\n     */\r\n    public loadImage(url: string): Promise<cc.SpriteFrame> {\r\n        return this.loadRes(url, cc.SpriteFrame);\r\n    }\r\n    /**\r\n     * 加载配置\r\n     * @param url 配置路径\r\n     */\r\n    public loadConfig(url: string): Promise<cc.JsonAsset> {\r\n        return this.loadRes(url, cc.JsonAsset);\r\n    }\r\n\r\n    public loadQueue(obj: { paths: any[], progress: Function, complete: Function }) {\r\n        let { paths, progress, complete } = obj;\r\n        let totalFileCount = paths.length;\r\n        let loadFileCount = 0;\r\n        for (let i = 0; i < totalFileCount; ++i) {\r\n            let { url, type } = paths[i];\r\n            this.loadRes(url, type).then(() => {\r\n                loadFileCount++;\r\n                progress(loadFileCount / totalFileCount);\r\n                if (loadFileCount === totalFileCount) complete();\r\n            });\r\n        }\r\n    }\r\n\r\n    public loadRes(url: string, type: any): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            cc.loader.loadRes(url, type, (err: Error, data: any) => {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    resolve(data);\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    public getRes(url: string, type: any): any {\r\n        return cc.loader.getRes(url, type);\r\n    }\r\n\r\n    public releaseRes(urlArr: string[]) {\r\n        for (let i = 0; i < urlArr.length; ++i) {\r\n            let uuids = cc.loader.getDependsRecursively(urlArr[i]);\r\n            cc.loader.release(uuids);\r\n        }\r\n    }\r\n}\r\n"]}