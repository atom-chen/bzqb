{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\framework\\lib\\extension/assets\\framework\\lib\\extension\\Array.js"],"names":["Array","prototype","deepCopy","map","JSON","parse","stringify","v","intersect","arr","filter","includes","union","concat","diff","removeByValue","value","idx","indexOf","splice"],"mappings":";;;;;;AAAAA,MAAMC,SAAN,CAAgBC,QAAhB,GAA2B,YAAY;AACnC,WAAO,KAAKC,GAAL,CAAS;AAAA,eAAKC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeC,CAAf,CAAX,CAAL;AAAA,KAAT,CAAP;AACH,CAFD;AAGA;AACAP,MAAMC,SAAN,CAAgBO,SAAhB,GAA4B,UAAUC,GAAV,EAAe;AACvC,WAAO,KAAKC,MAAL,CAAY;AAAA,eAAKD,IAAIE,QAAJ,CAAaJ,CAAb,CAAL;AAAA,KAAZ,CAAP;AACH,CAFD;AAGA;AACAP,MAAMC,SAAN,CAAgBW,KAAhB,GAAwB,UAAUH,GAAV,EAAe;AAAA;;AACnC,WAAO,KAAKI,MAAL,CAAYJ,IAAIC,MAAJ,CAAW;AAAA,eAAK,CAAC,MAAKC,QAAL,CAAcJ,CAAd,CAAN;AAAA,KAAX,CAAZ,CAAP;AACH,CAFD;AAGA;AACAP,MAAMC,SAAN,CAAgBa,IAAhB,GAAuB,UAAUL,GAAV,EAAe;AAAA;;AAClC,WAAO,KAAKI,MAAL,CAAYJ,GAAZ,EAAiBC,MAAjB,CAAwB;AAAA,eAAK,CAAC,OAAKC,QAAL,CAAcJ,CAAd,CAAD,IAAqB,CAACE,IAAIE,QAAJ,CAAaJ,CAAb,CAA3B;AAAA,KAAxB,CAAP;AACH,CAFD;AAGA;AACAP,MAAMC,SAAN,CAAgBc,aAAhB,GAAgC,UAAUC,KAAV,EAAiB;AAC7C,QAAIC,MAAM,KAAKC,OAAL,CAAaF,KAAb,CAAV;AACA,QAAI,CAACC,GAAL,EAAU,KAAKE,MAAL,CAAYF,GAAZ,EAAiB,CAAjB;AACb,CAHD","file":"Array.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\framework\\lib\\extension","sourcesContent":["Array.prototype.deepCopy = function () {\r\n    return this.map(v => JSON.parse(JSON.stringify(v)));\r\n}\r\n// 交集\r\nArray.prototype.intersect = function (arr) {\r\n    return this.filter(v => arr.includes(v));\r\n}\r\n// 并集\r\nArray.prototype.union = function (arr) {\r\n    return this.concat(arr.filter(v => !this.includes(v)));\r\n}\r\n// 差集\r\nArray.prototype.diff = function (arr) {\r\n    return this.concat(arr).filter(v => !this.includes(v) || !arr.includes(v));\r\n}\r\n// 根据值删除数组对应元素\r\nArray.prototype.removeByValue = function (value) {\r\n    let idx = this.indexOf(value);\r\n    if (~idx) this.splice(idx, 1);\r\n}"]}