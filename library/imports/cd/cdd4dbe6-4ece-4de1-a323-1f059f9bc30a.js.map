{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\framework\\net/assets\\framework\\net\\NetMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\framework\\net","sourcesContent":["﻿import GameNet from \"../modules/GameNet\";\r\nimport ModuleMgr from \"../modules/ModuleMgr\";\r\n\r\nexport enum G_NETTYPE {\r\n\thttp = 1,\r\n\tpomelo\r\n}\r\n\r\nlet netdef_reqmaxtime = 20000;\r\n\r\nexport default class NetMgr {\r\n\tprivate static _instance: NetMgr = new NetMgr();\r\n\tpublic static getInstance(): NetMgr {\r\n\t\treturn NetMgr._instance;\r\n\t}\r\n\tprivate _msgIndex: number = 0;//消息索引\r\n\tprivate _msgrecords: any = {};\r\n\tprivate _checkTimer: number = null;// 请求的事件检测定时器 \r\n\tprivate _pomeloIsReconnect: boolean = false;\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t//获取发送记录\r\n\tpublic getMsgRecords(): any {\r\n\t\treturn this._msgrecords;\r\n\t}\r\n\r\n\t// 告诉网络管理pomelo断开了\r\n\tpublic pomeloDisconnected(): void {\r\n\t\tconsole.log(\"pomelo断开!\");\r\n\t\tthis._pomeloIsReconnect = true;\r\n\t}\r\n\t//告诉网络管理pomelo正在连接中\r\n\tpublic pomeloConnecting(): void {\r\n\t\tconsole.log(\"pomelo正在连接!\");\r\n\t\tthis._pomeloIsReconnect = true;\r\n\t}\r\n\r\n\tpublic pomeloConnected(): void {\r\n\t\tif (this._pomeloIsReconnect) this._pomeloIsReconnect = false;\r\n\t\t// if (this._checkTimer == null) {\r\n\t\t// this._checkTimer = setInterval(() => {\r\n\t\t// \tthis._checkReq();\r\n\t\t// }, 3000);\r\n\t\t// }\r\n\t\t// ModuleMgr.getInstance().closeModule(\"juhua\");\r\n\t}\r\n\t// 在LoginMgr重连后清空pomelo的请求\r\n\tpublic clearPomeloReqs(): void {\r\n\t\t// console.log(\"清空pomelo记录\");\r\n\t\tfor (let route in this._msgrecords) {\r\n\t\t\tlet record = this._msgrecords[route];\r\n\t\t\tif (record.serverType == G_NETTYPE.pomelo) {\r\n\t\t\t\tdelete this._msgrecords[route];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//检测发送队列\r\n\tprivate _checkReq(): void {\r\n\t\tif (Object.keys(this._msgrecords).length > 0) {\r\n\t\t\tlet httpReSendMsgs = [];\r\n\t\t\tlet pomeloReSendMsgs = [];\r\n\t\t\tfor (let route in this._msgrecords) {\r\n\t\t\t\tlet record = this._msgrecords[route];\r\n\t\t\t\tif (Date.now() - record.time > netdef_reqmaxtime) {\r\n\t\t\t\t\t// 超过最大等待时间，断开并重新连接\r\n\t\t\t\t\tif (!this._pomeloIsReconnect) GameNet.getInstance().disconnect();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trecord.time = Date.now(); // 重置发送时间\r\n\t\t\t\t\tswitch (record.serverType) {\r\n\t\t\t\t\t\tcase G_NETTYPE.http:\r\n\t\t\t\t\t\t\thttpReSendMsgs.push(record);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase G_NETTYPE.pomelo:\r\n\t\t\t\t\t\t\tpomeloReSendMsgs.push(record);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tModuleMgr.getInstance().showJuhua();\r\n\t\t\t// 重发消息\r\n\t\t\tif (httpReSendMsgs.length > 0) GameNet.getInstance().reSendMsgs(httpReSendMsgs);\r\n\t\t\tif (pomeloReSendMsgs.length > 0 && !this._pomeloIsReconnect) GameNet.getInstance().reSendMsgs(pomeloReSendMsgs);\r\n\t\t}\r\n\t}\r\n\t//清除定时器\r\n\tpublic clearTimer(): void {\r\n\t\tif (this._checkTimer != null) {\r\n\t\t\tclearTimeout(this._checkTimer);\r\n\t\t\tthis._checkTimer = null;\r\n\t\t}\r\n\t}\r\n\r\n\t//转换消息成带msgindex的格式\r\n\tpublic convertMsg(route: string, data: any): any {\r\n\t\tlet words = route.split('.');\r\n\t\tlet newRecord: any = {\r\n\t\t\ttime: Date.now(),\r\n\t\t\troute: route\r\n\t\t}\r\n\t\tif (words[0] === \"http\") {\r\n\t\t\tnewRecord.serverType = G_NETTYPE.http;\r\n\t\t\tnewRecord.msg = {\r\n\t\t\t\thead: {\r\n\t\t\t\t\t// some property\r\n\t\t\t\t},\r\n\t\t\t\tbody: data\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnewRecord.serverType = G_NETTYPE.pomelo;\r\n\t\t\tdata.msgindex = this._msgIndex;\r\n\t\t\tnewRecord.msg = data;\r\n\t\t}\r\n\t\tthis._msgrecords[route] = newRecord;\r\n\t\tthis._msgIndex++;\r\n\t\treturn newRecord;\r\n\t}\r\n\t// 消息回复后的处理\r\n\tpublic doneWithRoute(route): void {\r\n\t\tif (this._msgrecords[route]) delete this._msgrecords[route];\r\n\t\tModuleMgr.getInstance().closeModule(\"juhua\");\r\n\t}\r\n}\r\n\r\n\r\n"]}