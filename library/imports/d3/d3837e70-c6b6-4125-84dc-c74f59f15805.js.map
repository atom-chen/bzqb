{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\framework\\baseClass/assets\\framework\\baseClass\\BaseCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\framework\\baseClass","sourcesContent":["import Emitter from \"../modules/Emitter\";\r\nimport ModuleMgr from \"../modules/ModuleMgr\";\r\nimport LogMgr from \"../modules/LogMgr\";\r\nimport Loader from \"../modules/Loader\";\r\n\r\nexport default class BaseCtrl extends cc.Component {\r\n    protected ui: any;\r\n    protected model: any;\r\n    protected view: any;\r\n    // 网络事件和回调映射\r\n    protected n_events: object;\r\n    // 全局事件和回调映射\r\n    protected g_events: object;\r\n    protected bindedNodes: cc.Node[] = [];\r\n    private _clickEnable: boolean = true;\r\n    // 发送全局事件\r\n    protected gemit(event: string, ...args: any[]): void {\r\n        Emitter.getInstance().emit(event, ...args);\r\n    }\r\n    // 定义网络事件\r\n    protected defineNetEvents(): void {\r\n        this.n_events = {};\r\n    }\r\n    // 定义全局事件\r\n    protected defineGlobalEvents(): void {\r\n        this.g_events = {};\r\n    }\r\n    // 注册所有事件\r\n    protected regAllEvents() {\r\n        //注册网络事件\r\n        for (let event in this.n_events) {\r\n            Emitter.getInstance().on(event, this.n_events[event], this);\r\n        }\r\n        //注册全局事件\r\n        for (let event in this.g_events) {\r\n            Emitter.getInstance().on(event, this.g_events[event], this);\r\n        }\r\n    }\r\n    /**\r\n\t * 打开子模块\r\n\t * @param moduleName 模块名\r\n\t */\r\n    public openSubModule(moduleName: string, isPublic: boolean = false): Promise<any> {\r\n        return ModuleMgr.getInstance().openSubModule(moduleName, isPublic);\r\n    }\r\n\r\n    public getPrefabSync(moduleName: string, isPublic: boolean = false): cc.Prefab {\r\n        let url = ModuleMgr.getInstance().getResUrl(\"prefab\", moduleName, isPublic);\r\n        return Loader.getInstance().getRes(url, cc.Prefab);\r\n    }\r\n    /**\r\n     * 关闭模块\r\n     * @param moduleName 模块名\r\n     */\r\n    public closeModule(moduleName: string): void {\r\n        ModuleMgr.getInstance().closeModule(moduleName);\r\n    }\r\n\r\n    /**\r\n\t * 切换场景\r\n\t * @param sceneName 场景名\r\n\t */\r\n    public switchScene(sceneName: string): void {\r\n        ModuleMgr.getInstance().switchScene(sceneName);\r\n    }\r\n    /**\r\n     * 绑定UI操作\r\n     * @param type 监听的UI操作事件,与引擎一致\r\n     * @param node 响应操作的节点\r\n     * @param callback UI操作事件回调\r\n     * @param opname 操作描述\r\n     */\r\n    protected connect(type: string, target: any, callback: (event?: any) => void, opname: string) {\r\n        let node = target instanceof cc.Node ? target : target.node;\r\n        switch (type) {\r\n            case \"click\": this.bindButton(node, callback, opname); break;\r\n            default: this.bindOtherHandle(type, node, callback, opname);\r\n        }\r\n        if (this.bindedNodes.indexOf(node) == -1) {\r\n            this.bindedNodes.push(node);\r\n        }\r\n    }\r\n\r\n    private bindButton(node: cc.Node, callback: (event?: any) => void, opname: string): void {\r\n        let btnCb = (event) => {\r\n            if (!this._clickEnable) return;\r\n            this._clickEnable = false;\r\n            this.scheduleOnce(() => {\r\n                this._clickEnable = true;\r\n            }, 0.3);\r\n            LogMgr.getInstance().addOpreation(opname);\r\n            callback.call(this, event);\r\n        };\r\n        node.on(\"click\", btnCb, this);\r\n    }\r\n\r\n    private bindOtherHandle(type: string, node: cc.Node, callback: (event?: any) => void, opname: string): void {\r\n        let handleCb = (event) => {\r\n            LogMgr.getInstance().addOpreation(opname);\r\n            callback.call(this, event);\r\n        };\r\n        node.on(type, handleCb, this)\r\n    };\r\n\r\n    protected connectUi(): void {\r\n\r\n    }\r\n\r\n    protected initMvc(Model: any, View: any): void {\r\n        // 数据模型\r\n        this.model = new Model();\r\n        // 视图\r\n        this.view = new View(this.model);\r\n        this.ui = this.view.ui;\r\n        // 定义网络事件\r\n        this.defineNetEvents();\r\n        // 定义全局事件\r\n        this.defineGlobalEvents();\r\n        // 注册所有事件\r\n        this.regAllEvents()\r\n        // 绑定ui操作\r\n        this.connectUi();\r\n    }\r\n    /** 移除自己 */\r\n    public remove(): void {\r\n        if (this.node && cc.isValid(this.node)) {\r\n            this.node.destroy();\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        // 移除操作回调\r\n        for (let i = 0; i < this.bindedNodes.length; ++i) {\r\n            let node = this.bindedNodes[i];\r\n            node.targetOff(this);\r\n        }\r\n        delete this.bindedNodes;\r\n        // 移除全局事件监听,网络事件监听\r\n        Emitter.getInstance().targetOff(this);\r\n        // 移除所有计时器\r\n        this.unscheduleAllCallbacks();\r\n        // 释放数据模型,视图\r\n        delete this.model;\r\n        delete this.view;\r\n    }\r\n    /** 是否是iPhoneX */\r\n    public isIPhoneX(): boolean {\r\n        let size = cc.view.getFrameSize();\r\n        if (cc.sys.isNative && cc.sys.platform == cc.sys.IPHONE && ((size.width == 2436 && size.height == 1125) || (size.width == 1125 && size.height == 2436))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 重设Canvas设计分辨率\r\n     * @param canvas 需要重设设计分辨率的canvas\r\n     */\r\n    public resetDesignResolution(canvas: cc.Canvas): void {\r\n        let height = 720;\r\n        let size = cc.view.getFrameSize();\r\n        let proportion = size.width / size.height;\r\n        let width = height * proportion;\r\n        canvas.designResolution = new cc.Size(width, height)\r\n        canvas.fitHeight = true\r\n        canvas.fitWidth = true\r\n    }\r\n}\r\n"]}