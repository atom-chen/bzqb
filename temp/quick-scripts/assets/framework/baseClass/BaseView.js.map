{"version":3,"sources":["BaseView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\framework\\baseClass","sourcesContent":["import ModuleMgr from \"../modules/ModuleMgr\";\r\nimport Loader from \"../modules/Loader\";\r\n\r\n/** @description 视图基类 */\r\nexport default class BaseView {\r\n    public ui: any;\r\n    protected model: any;\r\n    protected node: cc.Node;\r\n    private _grayLayer: cc.Node;\r\n\r\n    constructor(model: any) {\r\n        this.model = model;\r\n    }\r\n\r\n    public initUi(): void {\r\n\r\n    }\r\n    /**\r\n     * 加载图片\r\n     * @param imageName 图片名\r\n     * @param isPublic 是否是公共的，默认不是\r\n     */\r\n    public loadImage(imageName: string, isPublic: boolean = false): Promise<cc.SpriteFrame> {\r\n        return ModuleMgr.getInstance().loadImage(imageName, isPublic);\r\n    }\r\n\r\n    public getImageSync(imageName: string, isPublic: boolean = false): cc.SpriteFrame {\r\n        let url = ModuleMgr.getInstance().getResUrl(\"image\", imageName, isPublic);\r\n        return Loader.getInstance().getRes(url, cc.SpriteFrame);\r\n    }\r\n\r\n    /**\r\n     * 创建子节点\r\n     * @param prefab 需要实例化的预制或需要复制的节点\r\n     * @param parentNode 父节点\r\n     * @param zIndex z轴，默认为0\r\n     */\r\n    protected addPrefabNode(prefab: cc.Prefab | cc.Node, parentNode: cc.Node, zIndex: number = 0): cc.Node {\r\n        let prefabNode: cc.Node = <cc.Node>cc.instantiate(prefab);\r\n        prefabNode.parent = parentNode;\r\n        prefabNode.zIndex = zIndex;\r\n        return prefabNode;\r\n    }\r\n    /**\r\n     * 添加点击吞噬遮罩\r\n     * @param black 是否是黑色，默认是\r\n     */\r\n    protected addGrayLayer(black: boolean = true): void {\r\n        if (cc.isValid(this.node, true)) {\r\n            this._grayLayer = new cc.Node();\r\n            if (black) {\r\n                this._grayLayer.color = cc.Color.BLACK;\r\n                this._grayLayer.opacity = 150;\r\n                let sprite = this._grayLayer.addComponent(cc.Sprite);\r\n                sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\r\n                this.loadImage(\"singleColor\", true).then((spF: cc.SpriteFrame) => {\r\n                    sprite.spriteFrame = spF;\r\n                });\r\n            }\r\n            this._grayLayer.parent = this.node;\r\n            let size = cc.view.getVisibleSize();\r\n            this._grayLayer.width = size.width;\r\n            this._grayLayer.height = size.height;\r\n            this._grayLayer.zIndex = -1;\r\n            this._grayLayer.addComponent(cc.BlockInputEvents);\r\n        }\r\n    }\r\n    /**\r\n     * 字符串截取\r\n     * @param content 内容\r\n     * @param len 需要的长度\r\n     */\r\n    public cutString(content: string, len: number): string {\r\n        if (content.length > len) {\r\n            return `${content.slice(0, len)}...`;\r\n        }\r\n        return content;\r\n    }\r\n    /**\r\n     * 字符串转换\r\n     * @param content 内容\r\n     * @param keyword 关键字\r\n     * @param ReplaceWords 替换字数组\r\n     */\r\n    stringReplace(content: string, keyword: string, ReplaceWords: string[]) {\r\n        for (let i = 0; i < ReplaceWords.length; i++) {\r\n            content = content.replace(keyword, ReplaceWords[i])\r\n        }\r\n        return content;\r\n    }\r\n\r\n    /**\r\n     * 数字省略\r\n     * @param nub 数字\r\n     */\r\n    public numberEllipsis(num: number): string {\r\n        let output = null;\r\n        if (num >= 100000) {\r\n            output = Math.floor(num / 1000).toString() + \"k\";\r\n        }\r\n        else {\r\n            output = num.toString();\r\n        }\r\n        return output;\r\n    }\r\n\r\n\r\n}"]}