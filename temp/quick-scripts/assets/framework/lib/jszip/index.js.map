{"version":3,"sources":["index.js"],"names":["base64","require","JSZip","data","options","files","comment","root","load","clone","newObj","i","prototype","support","defaults","utils","encode","input","decode","compressions","window","module","exports"],"mappings":";;;;AAAA;;AAEA,IAAIA,SAASC,QAAQ,UAAR,CAAb;;AAEA;;;;;;;;;;;;AAYA;;;;;;AAMA,SAASC,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC1B;AACA,QAAG,EAAE,gBAAgBF,KAAlB,CAAH,EAA6B,OAAO,IAAIA,KAAJ,CAAUC,IAAV,EAAgBC,OAAhB,CAAP;;AAE7B;AACA;AACA;AACA;AACA;AACA,SAAKC,KAAL,GAAa,EAAb;;AAEA,SAAKC,OAAL,GAAe,IAAf;;AAEA;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,QAAIJ,IAAJ,EAAU;AACN,aAAKK,IAAL,CAAUL,IAAV,EAAgBC,OAAhB;AACH;AACD,SAAKK,KAAL,GAAa,YAAW;AACpB,YAAIC,SAAS,IAAIR,KAAJ,EAAb;AACA,aAAK,IAAIS,CAAT,IAAc,IAAd,EAAoB;AAChB,gBAAI,OAAO,KAAKA,CAAL,CAAP,KAAmB,UAAvB,EAAmC;AAC/BD,uBAAOC,CAAP,IAAY,KAAKA,CAAL,CAAZ;AACH;AACJ;AACD,eAAOD,MAAP;AACH,KARD;AASH;AACDR,MAAMU,SAAN,GAAkBX,QAAQ,UAAR,CAAlB;AACAC,MAAMU,SAAN,CAAgBJ,IAAhB,GAAuBP,QAAQ,QAAR,CAAvB;AACAC,MAAMW,OAAN,GAAgBZ,QAAQ,WAAR,CAAhB;AACAC,MAAMY,QAAN,GAAiBb,QAAQ,YAAR,CAAjB;;AAEA;;;;AAIAC,MAAMa,KAAN,GAAcd,QAAQ,yBAAR,CAAd;;AAEAC,MAAMF,MAAN,GAAe;AACX;;;;AAIAgB,YAAS,gBAASC,KAAT,EAAgB;AACrB,eAAOjB,OAAOgB,MAAP,CAAcC,KAAd,CAAP;AACH,KAPU;AAQX;;;;AAIAC,YAAS,gBAASD,KAAT,EAAgB;AACrB,eAAOjB,OAAOkB,MAAP,CAAcD,KAAd,CAAP;AACH;AAdU,CAAf;AAgBAf,MAAMiB,YAAN,GAAqBlB,QAAQ,gBAAR,CAArB;AACAmB,OAAOlB,KAAP,GAAaA,KAAb;AACAmB,OAAOC,OAAP,GAAiBpB,KAAjB","file":"index.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\framework\\lib\\jszip","sourcesContent":["'use strict';\n \nvar base64 = require('./base64');\n\n/**\nUsage:\n   zip = new JSZip();\n   zip.file(\"hello.txt\", \"Hello, World!\").file(\"tempfile\", \"nothing\");\n   zip.folder(\"images\").file(\"smile.gif\", base64Data, {base64: true});\n   zip.file(\"Xmas.txt\", \"Ho ho ho !\", {date : new Date(\"December 25, 2007 00:00:01\")});\n   zip.remove(\"tempfile\");\n\n   base64zip = zip.generate();\n\n**/\n\n/**\n * Representation a of zip file in js\n * @constructor\n * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional).\n * @param {Object=} options the options for creating this objects (optional).\n */\nfunction JSZip(data, options) {\n    // if this constructor is used without `new`, it adds `new` before itself:\n    if(!(this instanceof JSZip)) return new JSZip(data, options);\n\n    // object containing the files :\n    // {\n    //   \"folder/\" : {...},\n    //   \"folder/data.txt\" : {...}\n    // }\n    this.files = {};\n\n    this.comment = null;\n\n    // Where we are in the hierarchy\n    this.root = \"\";\n    if (data) {\n        this.load(data, options);\n    }\n    this.clone = function() {\n        var newObj = new JSZip();\n        for (var i in this) {\n            if (typeof this[i] !== \"function\") {\n                newObj[i] = this[i];\n            }\n        }\n        return newObj;\n    };\n}\nJSZip.prototype = require('./object');\nJSZip.prototype.load = require('./load');\nJSZip.support = require('./support');\nJSZip.defaults = require('./defaults');\n\n/**\n * @deprecated\n * This namespace will be removed in a future version without replacement.\n */\nJSZip.utils = require('./deprecatedPublicUtils');\n\nJSZip.base64 = {\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    encode : function(input) {\n        return base64.encode(input);\n    },\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    decode : function(input) {\n        return base64.decode(input);\n    }\n};\nJSZip.compressions = require('./compressions');\nwindow.JSZip=JSZip;\nmodule.exports = JSZip;\n "]}