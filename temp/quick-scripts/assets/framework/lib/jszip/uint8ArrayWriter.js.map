{"version":3,"sources":["uint8ArrayWriter.js"],"names":["utils","require","Uint8ArrayWriter","length","data","Uint8Array","index","prototype","append","input","transformTo","set","finalize","module","exports"],"mappings":";;;;AAAA;;AAEA,IAAIA,QAAQC,QAAQ,SAAR,CAAZ;;AAEA;;;;;AAKA,IAAIC,mBAAmB,SAAnBA,gBAAmB,CAASC,MAAT,EAAiB;AACpC,SAAKC,IAAL,GAAY,IAAIC,UAAJ,CAAeF,MAAf,CAAZ;AACA,SAAKG,KAAL,GAAa,CAAb;AACH,CAHD;AAIAJ,iBAAiBK,SAAjB,GAA6B;AACzB;;;;AAIAC,YAAQ,gBAASC,KAAT,EAAgB;AACpB,YAAIA,MAAMN,MAAN,KAAiB,CAArB,EAAwB;AACpB;AACAM,oBAAQT,MAAMU,WAAN,CAAkB,YAAlB,EAAgCD,KAAhC,CAAR;AACA,iBAAKL,IAAL,CAAUO,GAAV,CAAcF,KAAd,EAAqB,KAAKH,KAA1B;AACA,iBAAKA,KAAL,IAAcG,MAAMN,MAApB;AACH;AACJ,KAZwB;AAazB;;;;AAIAS,cAAU,oBAAW;AACjB,eAAO,KAAKR,IAAZ;AACH;AAnBwB,CAA7B;;AAsBAS,OAAOC,OAAP,GAAiBZ,gBAAjB","file":"uint8ArrayWriter.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\framework\\lib\\jszip","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\nvar Uint8ArrayWriter = function(length) {\n    this.data = new Uint8Array(length);\n    this.index = 0;\n};\nUint8ArrayWriter.prototype = {\n    /**\n     * Append any content to the current array.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        if (input.length !== 0) {\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            input = utils.transformTo(\"uint8array\", input);\n            this.data.set(input, this.index);\n            this.index += input.length;\n        }\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {Uint8Array} the generated array.\n     */\n    finalize: function() {\n        return this.data;\n    }\n};\n\nmodule.exports = Uint8ArrayWriter;\n"]}