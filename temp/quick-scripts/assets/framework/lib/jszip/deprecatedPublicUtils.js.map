{"version":3,"sources":["deprecatedPublicUtils.js"],"names":["utils","require","exports","string2binary","str","string2Uint8Array","transformTo","uint8Array2String","array","string2Blob","buffer","arrayBuffer2Blob","outputType","input","getTypeOf","checkSupport","type","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","compressionMethod","isRegExp","object"],"mappings":";;;;AAAA;;AACA,IAAIA,QAAQC,QAAQ,SAAR,CAAZ;;AAEA;;;;AAIAC,QAAQC,aAAR,GAAwB,UAASC,GAAT,EAAc;AAClC,SAAOJ,MAAMG,aAAN,CAAoBC,GAApB,CAAP;AACH,CAFD;;AAIA;;;;AAIAF,QAAQG,iBAAR,GAA4B,UAASD,GAAT,EAAc;AACtC,SAAOJ,MAAMM,WAAN,CAAkB,YAAlB,EAAgCF,GAAhC,CAAP;AACH,CAFD;;AAIA;;;;AAIAF,QAAQK,iBAAR,GAA4B,UAASC,KAAT,EAAgB;AACxC,SAAOR,MAAMM,WAAN,CAAkB,QAAlB,EAA4BE,KAA5B,CAAP;AACH,CAFD;;AAIA;;;;AAIAN,QAAQO,WAAR,GAAsB,UAASL,GAAT,EAAc;AAChC,MAAIM,SAASV,MAAMM,WAAN,CAAkB,aAAlB,EAAiCF,GAAjC,CAAb;AACA,SAAOJ,MAAMW,gBAAN,CAAuBD,MAAvB,CAAP;AACH,CAHD;;AAKA;;;;AAIAR,QAAQS,gBAAR,GAA2B,UAASD,MAAT,EAAiB;AACxC,SAAOV,MAAMW,gBAAN,CAAuBD,MAAvB,CAAP;AACH,CAFD;;AAIA;;;;AAIAR,QAAQI,WAAR,GAAsB,UAASM,UAAT,EAAqBC,KAArB,EAA4B;AAC9C,SAAOb,MAAMM,WAAN,CAAkBM,UAAlB,EAA8BC,KAA9B,CAAP;AACH,CAFD;;AAIA;;;;AAIAX,QAAQY,SAAR,GAAoB,UAASD,KAAT,EAAgB;AAChC,SAAOb,MAAMc,SAAN,CAAgBD,KAAhB,CAAP;AACH,CAFD;;AAIA;;;;AAIAX,QAAQa,YAAR,GAAuB,UAASC,IAAT,EAAe;AAClC,SAAOhB,MAAMe,YAAN,CAAmBC,IAAnB,CAAP;AACH,CAFD;;AAIA;;;;AAIAd,QAAQe,gBAAR,GAA2BjB,MAAMiB,gBAAjC;;AAEA;;;;AAIAf,QAAQgB,gBAAR,GAA2BlB,MAAMkB,gBAAjC;;AAGA;;;;AAIAhB,QAAQiB,MAAR,GAAiB,UAASf,GAAT,EAAc;AAC3B,SAAOJ,MAAMmB,MAAN,CAAaf,GAAb,CAAP;AACH,CAFD;;AAIA;;;;AAIAF,QAAQkB,eAAR,GAA0B,UAASC,iBAAT,EAA4B;AAClD,SAAOrB,MAAMoB,eAAN,CAAsBC,iBAAtB,CAAP;AACH,CAFD;;AAIA;;;;AAIAnB,QAAQoB,QAAR,GAAmB,UAAUC,MAAV,EAAkB;AACjC,SAAOvB,MAAMsB,QAAN,CAAeC,MAAf,CAAP;AACH,CAFD","file":"deprecatedPublicUtils.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\framework\\lib\\jszip","sourcesContent":["'use strict';\nvar utils = require('./utils');\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2binary = function(str) {\n    return utils.string2binary(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Uint8Array = function(str) {\n    return utils.transformTo(\"uint8array\", str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.uint8Array2String = function(array) {\n    return utils.transformTo(\"string\", array);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Blob = function(str) {\n    var buffer = utils.transformTo(\"arraybuffer\", str);\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.arrayBuffer2Blob = function(buffer) {\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.transformTo = function(outputType, input) {\n    return utils.transformTo(outputType, input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.getTypeOf = function(input) {\n    return utils.getTypeOf(input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.checkSupport = function(type) {\n    return utils.checkSupport(type);\n};\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.pretty = function(str) {\n    return utils.pretty(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.findCompression = function(compressionMethod) {\n    return utils.findCompression(compressionMethod);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.isRegExp = function (object) {\n    return utils.isRegExp(object);\n};\n\n"]}