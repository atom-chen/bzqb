{"version":3,"sources":["support.js"],"names":["exports","base64","array","string","arraybuffer","ArrayBuffer","Uint8Array","nodebuffer","Buffer","uint8array","blob","buffer","Blob","type","size","e","Builder","window","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob"],"mappings":";;;;AAAA;;AACAA,QAAQC,MAAR,GAAiB,IAAjB;AACAD,QAAQE,KAAR,GAAgB,IAAhB;AACAF,QAAQG,MAAR,GAAiB,IAAjB;AACAH,QAAQI,WAAR,GAAsB,OAAOC,WAAP,KAAuB,WAAvB,IAAsC,OAAOC,UAAP,KAAsB,WAAlF;AACA;AACA;AACA;AACAN,QAAQO,UAAR,GAAqB,OAAOC,MAAP,KAAkB,WAAvC;AACA;AACAR,QAAQS,UAAR,GAAqB,OAAOH,UAAP,KAAsB,WAA3C;;AAEA,IAAI,OAAOD,WAAP,KAAuB,WAA3B,EAAwC;AACpCL,YAAQU,IAAR,GAAe,KAAf;AACH,CAFD,MAGK;AACD,QAAIC,SAAS,IAAIN,WAAJ,CAAgB,CAAhB,CAAb;AACA,QAAI;AACAL,gBAAQU,IAAR,GAAe,IAAIE,IAAJ,CAAS,CAACD,MAAD,CAAT,EAAmB;AAC9BE,kBAAM;AADwB,SAAnB,EAEZC,IAFY,KAEH,CAFZ;AAGH,KAJD,CAKA,OAAOC,CAAP,EAAU;AACN,YAAI;AACA,gBAAIC,UAAUC,OAAOC,WAAP,IAAsBD,OAAOE,iBAA7B,IAAkDF,OAAOG,cAAzD,IAA2EH,OAAOI,aAAhG;AACA,gBAAIC,UAAU,IAAIN,OAAJ,EAAd;AACAM,oBAAQC,MAAR,CAAeZ,MAAf;AACAX,oBAAQU,IAAR,GAAeY,QAAQE,OAAR,CAAgB,iBAAhB,EAAmCV,IAAnC,KAA4C,CAA3D;AACH,SALD,CAMA,OAAOC,CAAP,EAAU;AACNf,oBAAQU,IAAR,GAAe,KAAf;AACH;AACJ;AACJ","file":"support.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\framework\\lib\\jszip","sourcesContent":["'use strict';\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\n// contains true if JSZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\nexports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if JSZip can read/generate Uint8Array, false otherwise.\nexports.uint8array = typeof Uint8Array !== \"undefined\";\n\nif (typeof ArrayBuffer === \"undefined\") {\n    exports.blob = false;\n}\nelse {\n    var buffer = new ArrayBuffer(0);\n    try {\n        exports.blob = new Blob([buffer], {\n            type: \"application/zip\"\n        }).size === 0;\n    }\n    catch (e) {\n        try {\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            exports.blob = builder.getBlob('application/zip').size === 0;\n        }\n        catch (e) {\n            exports.blob = false;\n        }\n    }\n}\n"]}