{"version":3,"sources":["uint8ArrayReader.js"],"names":["DataReader","require","Uint8ArrayReader","data","length","index","prototype","byteAt","i","lastIndexOfSignature","sig","sig0","charCodeAt","sig1","sig2","sig3","readData","size","checkOffset","Uint8Array","result","subarray","module","exports"],"mappings":";;;;AAAA;;AACA,IAAIA,aAAaC,QAAQ,cAAR,CAAjB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,QAAIA,IAAJ,EAAU;AACN,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKC,MAAL,GAAc,KAAKD,IAAL,CAAUC,MAAxB;AACA,aAAKC,KAAL,GAAa,CAAb;AACH;AACJ;AACDH,iBAAiBI,SAAjB,GAA6B,IAAIN,UAAJ,EAA7B;AACA;;;AAGAE,iBAAiBI,SAAjB,CAA2BC,MAA3B,GAAoC,UAASC,CAAT,EAAY;AAC5C,WAAO,KAAKL,IAAL,CAAUK,CAAV,CAAP;AACH,CAFD;AAGA;;;AAGAN,iBAAiBI,SAAjB,CAA2BG,oBAA3B,GAAkD,UAASC,GAAT,EAAc;AAC5D,QAAIC,OAAOD,IAAIE,UAAJ,CAAe,CAAf,CAAX;AAAA,QACIC,OAAOH,IAAIE,UAAJ,CAAe,CAAf,CADX;AAAA,QAEIE,OAAOJ,IAAIE,UAAJ,CAAe,CAAf,CAFX;AAAA,QAGIG,OAAOL,IAAIE,UAAJ,CAAe,CAAf,CAHX;AAIA,SAAK,IAAIJ,IAAI,KAAKJ,MAAL,GAAc,CAA3B,EAA8BI,KAAK,CAAnC,EAAsC,EAAEA,CAAxC,EAA2C;AACvC,YAAI,KAAKL,IAAL,CAAUK,CAAV,MAAiBG,IAAjB,IAAyB,KAAKR,IAAL,CAAUK,IAAI,CAAd,MAAqBK,IAA9C,IAAsD,KAAKV,IAAL,CAAUK,IAAI,CAAd,MAAqBM,IAA3E,IAAmF,KAAKX,IAAL,CAAUK,IAAI,CAAd,MAAqBO,IAA5G,EAAkH;AAC9G,mBAAOP,CAAP;AACH;AACJ;;AAED,WAAO,CAAC,CAAR;AACH,CAZD;AAaA;;;AAGAN,iBAAiBI,SAAjB,CAA2BU,QAA3B,GAAsC,UAASC,IAAT,EAAe;AACjD,SAAKC,WAAL,CAAiBD,IAAjB;AACA,QAAGA,SAAS,CAAZ,EAAe;AACX;AACA,eAAO,IAAIE,UAAJ,CAAe,CAAf,CAAP;AACH;AACD,QAAIC,SAAS,KAAKjB,IAAL,CAAUkB,QAAV,CAAmB,KAAKhB,KAAxB,EAA+B,KAAKA,KAAL,GAAaY,IAA5C,CAAb;AACA,SAAKZ,KAAL,IAAcY,IAAd;AACA,WAAOG,MAAP;AACH,CATD;AAUAE,OAAOC,OAAP,GAAiBrB,gBAAjB","file":"uint8ArrayReader.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\framework\\lib\\jszip","sourcesContent":["'use strict';\nvar DataReader = require('./dataReader');\n\nfunction Uint8ArrayReader(data) {\n    if (data) {\n        this.data = data;\n        this.length = this.data.length;\n        this.index = 0;\n    }\n}\nUint8ArrayReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nUint8ArrayReader.prototype.byteAt = function(i) {\n    return this.data[i];\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nUint8ArrayReader.prototype.lastIndexOfSignature = function(sig) {\n    var sig0 = sig.charCodeAt(0),\n        sig1 = sig.charCodeAt(1),\n        sig2 = sig.charCodeAt(2),\n        sig3 = sig.charCodeAt(3);\n    for (var i = this.length - 4; i >= 0; --i) {\n        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n/**\n * @see DataReader.readData\n */\nUint8ArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n    }\n    var result = this.data.subarray(this.index, this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = Uint8ArrayReader;\n"]}