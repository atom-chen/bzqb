{"version":3,"sources":["loginMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\manager\\public","sourcesContent":["import BaseMgr from \"../../framework/baseClass/BaseMgr\";\r\nimport GameNet from \"../../framework/modules/GameNet\";\r\nimport NetMgr from \"../../framework/net/NetMgr\";\r\nimport { dataids } from \"../../framework/net/dataids\";\r\nimport Package from \"../../framework/net/package\";\r\nimport ModuleMgr from \"../../framework/modules/ModuleMgr\";\r\nimport UserMgr from \"./userMgr\";\r\nimport Cache from \"../../framework/modules/Cache\";\r\n\r\nenum ServerType {\r\n    server_gate = 1,\r\n    server_connector\r\n}\r\n\r\nexport default class LoginMgr extends BaseMgr {\r\n    //单例处理\r\n    private static _instance: LoginMgr = null;\r\n    public static getInstance(): LoginMgr {\r\n        if (LoginMgr._instance == null) {\r\n            LoginMgr._instance = new LoginMgr();\r\n        }\r\n        return LoginMgr._instance;\r\n    }\r\n    private _serverType: ServerType = ServerType.server_gate;\r\n    private _platId: string = null;\r\n    private _token: string = null;\r\n    private _isAutoLogin: boolean = true;\r\n    public nicknameCfgTab: any = [];    //昵称配表\r\n\r\n    constructor() {\r\n        super();\r\n        this.routes = {\r\n            'gate.entry.req': this.gate_entry_req,\r\n            'connector.entry.login': this.connector_entry_login,\r\n            'plaza.users.initUser': this.plaza_users_initUser,\r\n            'plaza.users.createRole': this.plaza_users_createRole,\r\n        }\r\n    }\r\n\r\n    private gate_entry_req(msg: Package): void {\r\n        let hostInfo = msg.getDataByType(dataids.ID_CONNECTOR_INFO);\r\n        let uid = msg.getDataByType(dataids.ID_UID);\r\n        let serverTime = msg.getDataByType(dataids.ID_SERVER_TIME);\r\n        this._serverType = ServerType.server_connector;\r\n        GameNet.getInstance().setUid(uid);\r\n        GameNet.getInstance().setServerDelay(serverTime - Date.now());\r\n        GameNet.getInstance().setConnectSvrData(hostInfo);\r\n        GameNet.getInstance().disconnect();\r\n        if (this._isAutoLogin) Cache.getInstance().setItem(\"loginCache\", { uid: this._platId, token: this._token });\r\n    }\r\n\r\n    private connector_entry_login(msg: Package): void {\r\n        this._sendPlazaInitUser();\r\n    }\r\n\r\n    private plaza_users_initUser(msg: Package): void {\r\n        let roleId = msg.getDataByType(dataids.ID_USER_INFO).roleId;\r\n        if (roleId == 0) {\r\n            this.gemit(\"goToCreateRole\");\r\n        } else {\r\n            this._goToPlaza();\r\n        }\r\n    }\r\n\r\n    private plaza_users_createRole(msg: Package): void {\r\n        this._goToPlaza();\r\n    }\r\n\r\n    public login(obj): void {\r\n        this._platId = obj.uid;\r\n        this._token = obj.token;\r\n        let { host, port } = GameNet.getInstance().getGateSvrData();\r\n        GameNet.getInstance().connect(host, port, this.connectcb.bind(this));\r\n    }\r\n\r\n    public switchAccount(): void {\r\n        GameNet.getInstance().clear();\r\n        Cache.getInstance().removeItemByKey(\"loginCache\");\r\n        ModuleMgr.getInstance().switchScene(\"login\");\r\n    }\r\n\r\n    private _goToPlaza(): void {\r\n        ModuleMgr.getInstance().switchScene(\"plaza\", [\r\n            'plaza.role.reqRoleList',\r\n            'plaza.data.reqBoxes',\r\n            'plaza.data.reqItemList',\r\n            'plaza.data.reqFriendIds',\r\n            'plaza.data.reqUnsettled',\r\n        ]);\r\n    }\r\n\r\n    restartGame() {\r\n        cc.audioEngine.stopAll();\r\n        cc.Game.restart();\r\n    }\r\n\r\n    private ok_cb(event) {\r\n        this.restartGame();\r\n    }\r\n\r\n    connectcb(event_type, event) {\r\n        switch (this._serverType) {\r\n            case ServerType.server_gate:\r\n                this.gateConnectCb(event_type, event)\r\n                break;\r\n            case ServerType.server_connector:\r\n                this.connectConnector(event_type, event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // gate服的连接回调\r\n    gateConnectCb(event_type, event) {\r\n        switch (event_type) {\r\n            case 'connect':\r\n                console.log(\"连接上gate服\");\r\n                //清除pomelo的发送队列\r\n                NetMgr.getInstance().pomeloConnected();\r\n                NetMgr.getInstance().clearPomeloReqs();\r\n                //去获取连接服\r\n                this._sendGateReq();\r\n                break;\r\n            case 'disconnect':\r\n                NetMgr.getInstance().pomeloDisconnected();\r\n                let { host, port } = GameNet.getInstance().getGateSvrData();\r\n                GameNet.getInstance().connect(host, port, this.connectcb.bind(this));\r\n                break;\r\n            case 'onKick':\r\n                break;\r\n        }\r\n    }\r\n\r\n    // connect服的连接回调\r\n    connectConnector(event_type, event) {\r\n        switch (event_type) {\r\n            case 'connect':\r\n                console.log(\"连接上connect服\");\r\n                NetMgr.getInstance().pomeloConnected();\r\n                NetMgr.getInstance().clearPomeloReqs();\r\n                this._sendConnectLogin();\r\n                break;\r\n            case 'disconnect':\r\n                NetMgr.getInstance().pomeloDisconnected();\r\n                let { host, port } = GameNet.getInstance().getConnectSvrData();\r\n                GameNet.getInstance().connect(host, port, this.connectcb.bind(this));\r\n                break;\r\n            case 'onKick':\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 去获取连接服ip和端口\r\n    private _sendGateReq(): void {\r\n        this.send_msg('gate.entry.req', {\r\n            platId: this._platId,\r\n            token: this._token\r\n        });\r\n    }\r\n\r\n    private _sendConnectLogin(): void {\r\n        this.send_msg('connector.entry.login', {\r\n            uid: UserMgr.getInstance().user.userUID,\r\n        });\r\n    }\r\n\r\n    private _sendPlazaInitUser(): void {\r\n        this.send_msg('plaza.users.initUser', {\r\n            uid: UserMgr.getInstance().user.userUID\r\n        });\r\n    }\r\n\r\n    //创建角色发送请求\r\n    public sendRegisterUser(nickname: string, roleID: number): void {\r\n        this.send_msg(\"plaza.users.createRole\", {\r\n            uid: UserMgr.getInstance().user.userUID,\r\n            nickname: nickname,\r\n            itemId: roleID,\r\n        });\r\n    }\r\n\r\n    getToken() {\r\n        return this._token;\r\n    }\r\n\r\n    //获取昵称配表\r\n    public getNicknameCfgTab(): void {\r\n        this.nicknameCfgTab = this.getConfigSync(\"nicheng_nicheng\").json;\r\n    }\r\n\r\n    destroy() {\r\n        // console.log(\"LoginMgr清空了自己\");\r\n        super.destroy();\r\n        delete LoginMgr._instance;\r\n        LoginMgr._instance = null;\r\n    }\r\n}"]}