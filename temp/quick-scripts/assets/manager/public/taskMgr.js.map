{"version":3,"sources":["taskMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\manager\\public","sourcesContent":["import BaseMgr from \"../../framework/baseClass/BaseMgr\";\nimport { dailyTaskList, activeBoxesList, activeBoxes, rewark, dailyTask } from \"./interface/iDailyTaskInfo\";\nimport Package from \"../../framework/net/package\";\nimport GameNet from \"../../framework/modules/GameNet\";\nimport { dataids } from \"../../framework/net/dataids\";\n\n/*\nauthor: 陈斌杰\n日期:2018-11-23 13:47:34\n*/\n\nexport default class TaskMgr extends BaseMgr {\n\tpublic isFirst: boolean = false;\t\t\t\t\t\t\t\t//是否第一次打开\n\tpublic dailyTaskCfgTab: any = null;\t\t\t\t\t\t\t\t//每日任务配置表\n\tpublic activeBoxesCfgTab: any = null;\t\t\t\t\t\t\t//活跃度宝箱配置表\n\tpublic dailyTaskData: dailyTaskList = <dailyTaskList>{};\t\t//每日任务数据\n\tpublic activeBoxesData: activeBoxesList = <activeBoxesList>{};\t//活跃度宝箱数据\n\tpublic activity: number = 0;\t\t\t\t\t\t\t\t\t//当前活跃度\n\tconstructor() {\n\t\tsuper();\n\t\tthis.routes = {\n\t\t\t\"plaza.data.reqDailyMissionInfo\": this.reqDailyMissionInfo,\n\t\t};\n\t}\n\n\t// 单例处理\n\tprivate static _instance: TaskMgr = null;\n\tpublic static getInstance(): TaskMgr {\n\t\tif (TaskMgr._instance == null) {\n\t\t\tTaskMgr._instance = new TaskMgr();\n\t\t}\n\t\treturn TaskMgr._instance;\n\t}\n\n\t//向服务器发送每日任务数据请求\n\tpublic sendReqDailyTaskData(): void {\n\t\tthis.send_msg(\"plaza.data.reqDailyMissionInfo\");\n\t}\n\n\t//获取服务器下发的每日任务数据\n\tpublic reqDailyMissionInfo(msg: Package): void {\n\t\tthis.isFirst = true;\n\t\tlet data = msg.getDataByType(dataids.ID_DAILYMISSIONINFO);\n\t\tthis.getDailyTaskCfgTab();\n\t\tthis.initDailyTaskData();\n\t\tthis.initActiveBoxesData();\n\t\tthis.setVitality(data.vitality);\n\t\tthis.setDailyTaskData(data.arr);\n\t}\n\n\t//获取每日任务配置表\n\tpublic getDailyTaskCfgTab(): void {\n\t\tthis.dailyTaskCfgTab = this.getConfigSync(\"dailyTask_dailyTask\").json;\n\t\tthis.activeBoxesCfgTab = this.getConfigSync(\"dailyTask_activeValueReward\").json;\n\t}\n\n\t//初始化任务数据\n\tpublic initDailyTaskData(): void {\n\t\tthis.dailyTaskData.list = [];\n\t\tfor (let i = 0; i < this.dailyTaskCfgTab.length; i++) {\n\t\t\tlet taskData = this.dailyTaskCfgTab[i];\n\t\t\tlet dailyTask = <dailyTask>{};\n\t\t\tdailyTask.id = taskData.id;\n\t\t\tdailyTask.name = taskData.name;\n\t\t\tdailyTask.des = taskData.des;\n\t\t\tdailyTask.received = false;\n\t\t\tdailyTask.type = taskData.type;\n\t\t\tdailyTask.progress = 0;\n\t\t\tdailyTask.parameter = taskData.parameter;\n\t\t\tdailyTask.activeValue = taskData.activeValue;\n\t\t\tdailyTask.exp = taskData.exp;\n\t\t\tdailyTask.rewarks = [];\n\t\t\tfor (let j = 0; j < taskData.reward.length; j++) {\n\t\t\t\tlet data = taskData.reward[j];\n\t\t\t\tlet rewark = <rewark>{};\n\t\t\t\trewark.type = data.type;\n\t\t\t\trewark.itemId = data.itemId;\n\t\t\t\trewark.amount = data.amount;\n\t\t\t\tdailyTask.rewarks.push(rewark);\n\t\t\t}\n\t\t\tthis.dailyTaskData.list.push(dailyTask);\n\t\t}\n\t}\n\n\t//初始化活跃度宝箱数据\n\tpublic initActiveBoxesData(): void {\n\t\tthis.activeBoxesData.list = [];\n\t\tfor (let i = 0; i < this.activeBoxesCfgTab.length; i++) {\n\t\t\tlet boxesData = this.activeBoxesCfgTab[i];\n\t\t\tlet activeBoxes = <activeBoxes>{};\n\t\t\tactiveBoxes.id = boxesData.id;\n\t\t\tactiveBoxes.type = boxesData.type;\n\t\t\tactiveBoxes.isOpen = false;\n\t\t\tactiveBoxes.condition = boxesData.condition;\n\t\t\tactiveBoxes.rewarks = [];\n\t\t\tfor (let j = 0; j < boxesData.reward.length; j++) {\n\t\t\t\tlet data = boxesData.reward[j];\n\t\t\t\tlet rewark = <rewark>{};\n\t\t\t\trewark.type = data.type;\n\t\t\t\trewark.itemId = data.itemId;\n\t\t\t\trewark.amount = data.amount;\n\t\t\t\tactiveBoxes.rewarks.push(rewark);\n\t\t\t}\n\t\t\tthis.activeBoxesData.list.push(activeBoxes);\n\t\t}\n\t}\n\n\t//设置每日任务数据\n\tpublic setDailyTaskData(data: any): void {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tlet taskData = data[i];\n\t\t\tfor (let j = 0; j < this.dailyTaskData.list.length; j++) {\n\t\t\t\tlet task = this.dailyTaskData.list[j];\n\t\t\t\tif (taskData.itemId == task.id) {\n\t\t\t\t\tif (taskData.received == 1) {\n\t\t\t\t\t\ttask.received = true;\n\t\t\t\t\t}\n\t\t\t\t\ttask.progress = taskData.src;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//设置当前活跃度\n\tpublic setVitality(vitality: number): void {\n\t\tthis.activity += vitality;\n\t}\n\n\t//判断是否可以打开\n\tpublic getIsCanOpenBoxes(boxesId: number): boolean {\n\t\tlet isCanOpen = false;\n\t\tfor (let i = 0; i < this.activeBoxesData.list.length; i++) {\n\t\t\tlet boxData = this.activeBoxesData.list[i];\n\t\t\tif (boxesId == boxData.id && boxData.condition < this.activity) {\n\t\t\t\tboxData.isOpen = true;\n\t\t\t}\n\t\t}\n\t\treturn isCanOpen;\n\t}\n}"]}