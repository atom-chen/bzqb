{"version":3,"sources":["mailMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\manager\\public","sourcesContent":["import BaseMgr from \"../../framework/baseClass/BaseMgr\";\nimport { mailsData, mail, mail_rewark } from \"./interface/iMailInfo\";\nimport GameNet from \"../../framework/modules/GameNet\";\nimport Package from \"../../framework/net/package\";\nimport { dataids } from \"../../framework/net/dataids\";\n\n/*\nauthor: 陈斌杰\n日期:2018-11-16 16:40:35\n*/\n\nexport default class MailMgr extends BaseMgr {\n\tpublic isFrist: boolean = false;\t\t\t\t//是否是第一次打开\n\tpublic mailsData: mailsData = <mailsData>{};\t//全部邮件数据\n\tpublic mailCount: number = 0;\t\t\t\t\t//邮件数量\n\tpublic isAllMailRecRewark: boolean = false;\t\t//是否全部领取\n\tpublic boxesRewark: any = null;\t\t\t\t\t//邮件宝箱数据\n\tconstructor() {\n\t\tsuper();\n\t\tthis.routes = {\n\t\t\t\"plaza.mail.reqMailList\": this.reqMailList,\n\t\t\t\"plaza.mail.readMail\": this.readMail,\n\t\t\t\"plaza.mail.recMail\": this.recMail,\n\t\t\t\"plaza.mail.delMail\": this.delMail,\n\t\t\t\"onNewMail\": this.onNewMail,\n\t\t};\n\t}\n\n\t// 单例处理\n\tprivate static _instance: MailMgr = null;\n\tpublic static getInstance(): MailMgr {\n\t\tif (MailMgr._instance == null) {\n\t\t\tMailMgr._instance = new MailMgr();\n\t\t}\n\t\treturn MailMgr._instance;\n\t}\n\n\t//向服务器请求邮件数据\n\tpublic sendReqMailsData(): void {\n\t\tthis.send_msg(\"plaza.mail.reqMailList\");\n\t}\n\n\t//获取服务器下发的邮件数据\n\tpublic reqMailList(msg: Package): void {\n\t\tlet mailsData = msg.getDataByType(dataids.ID_GET_MAILS);\n\t\tthis.isFrist = true;\n\t\tthis.initMailsData();\n\t\tthis.setMailsData(mailsData);\n\t}\n\n\t//向服务器请求邮件详细数据\n\tpublic sendReqMailExplainData(idList: number[]): void {\n\t\tlet msg = {\n\t\t\tlistAutoId: idList,\n\t\t}\n\t\tthis.send_msg(\"plaza.mail.readMail\", msg);\n\t}\n\n\t//获取服务器下发的邮件详细数据\n\tpublic readMail(msg: Package): void {\n\t\tlet mailData = msg.getDataByType(dataids.ID_READ_MAIL);\n\t\tthis.setReadMailData(mailData);\n\t\tthis.gemit(\"refreshMailExplain\", mailData[0].id);\n\t}\n\n\t//向服务器发送领取邮件物品请求\n\tpublic sendReqMailRewark(idList: number[]): void {\n\t\tlet msg = {\n\t\t\tlistAutoId: idList,\n\t\t}\n\t\tthis.send_msg(\"plaza.mail.recMail\", msg);\n\t}\n\n\t//获取服务器下发的邮件奖励数据\n\tpublic recMail(msg: Package): void {\n\t\tlet data = msg.getDataByType(dataids.ID_GET_MAILITEMS);\n\t\tthis.setMailBRecData(data.listAutoId);\n\n\t\t//有宝箱要特殊处理\n\t\tlet boxesData = msg.getDataByType(dataids.ID_GET_BOXPRIZE);\n\t\tthis.setBoxesData(boxesData);\n\t}\n\n\t//向服务器发送删除邮件请求\n\tpublic sendReqMailDel(idList: number[]): void {\n\t\tlet msg = {\n\t\t\tlistAutoId: idList,\n\t\t}\n\t\tthis.send_msg(\"plaza.mail.delMail\", msg);\n\t}\n\n\t//获取服务器下发的删除邮件数据\n\tpublic delMail(msg: Package): void {\n\t\tlet data = msg.getDataByType(dataids.ID_DEL_MAIL);\n\t\tthis.delMailData(data);\n\t}\n\n\t//新邮件数据\n\tpublic onNewMail(msg: Package): void {\n\t\tlet mailsData = msg.getDataByType(dataids.ID_NEW_MAIL);\n\t\tconsole.log(\"--------新邮件数据-------\",mailsData);\n\t\tif (!this.isFrist) {\n\t\t\tthis.initMailsData();\n\t\t}\n\t\tthis.setMailsData(mailsData);\n\t}\n\n\t//初始化邮箱数据\n\tpublic initMailsData(): void {\n\t\tthis.mailsData.list = [];\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tlet mail: mail = <mail>{};\n\t\t\tmail.id = null;\n\t\t\tmail.bReaded = false;\n\t\t\tmail.bRec = false;\n\t\t\tmail.title = null;\n\t\t\tmail.sendTime = null;\n\t\t\tmail.residueTime = null;\n\t\t\tmail.content = null;\n\t\t\tmail.reward = [];\n\t\t\tthis.mailsData.list.push(mail);\n\t\t}\n\t}\n\n\t//设置邮箱数据\n\tpublic setMailsData(data: any): void {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tfor (let j = 0; j < this.mailsData.list.length; j++) {\n\t\t\t\tlet mailData = this.mailsData.list[j];\n\t\t\t\tif (mailData.id) {\n\t\t\t\t\tlet mail: mail = <mail>{};\n\t\t\t\t\tmail.id = data[i].id;\n\t\t\t\t\tif (data[i].bReaded == 1) {\n\t\t\t\t\t\tmail.bReaded = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmail.bReaded = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].bRec == 1) {\n\t\t\t\t\t\tmail.bRec = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmail.bRec = false;\n\t\t\t\t\t}\n\t\t\t\t\tmail.title = data[i].title;\n\t\t\t\t\tmail.sendTime = this.changeTimeStamp(data[i].createTime);\n\t\t\t\t\tmail.residueTime = this.getRemainingTiem(data[i].createTime);;\n\t\t\t\t\tthis.mailsData.list.splice(-1, 1);\t\t//删除最后一个空数据  在第一个位置添加新数据\n\t\t\t\t\tthis.mailsData.list.splice(0, 0, mail);\n\t\t\t\t} else {\n\t\t\t\t\tmailData.id = data[i].id;\n\t\t\t\t\tif (data[i].bReaded == 1) {\n\t\t\t\t\t\tmailData.bReaded = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].bRec == 1) {\n\t\t\t\t\t\tmailData.bRec = true;\n\t\t\t\t\t}\n\t\t\t\t\tmailData.title = data[i].title;\n\t\t\t\t\tmailData.sendTime = this.changeTimeStamp(data[i].createTime);\n\t\t\t\t\tmailData.residueTime = this.getRemainingTiem(data[i].createTime);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.mailCount += data.length;\n\t}\n\n\t//设置邮件的读取数据\n\tpublic setReadMailData(data: any): void {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tfor (let j = 0; j < this.mailsData.list.length; j++) {\n\t\t\t\tlet mailData = this.mailsData.list[j];\n\t\t\t\tif (data[i].id == mailData.id) {\n\t\t\t\t\tmailData.bReaded = true;\n\t\t\t\t\tmailData.content = data[i].content;\n\t\t\t\t\tmailData.reward = [];\n\t\t\t\t\tfor (let k = 0; k < data[i].recItems.length; k++) {\n\t\t\t\t\t\tif (!data[i].recItems[k].type || !data[i].recItems[k].amount || !data[i].recItems[k].itemId) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet mail_rewark: mail_rewark = <mail_rewark>{};\n\t\t\t\t\t\tmail_rewark.type = data[i].recItems[k].type;\n\t\t\t\t\t\tmail_rewark.amount = data[i].recItems[k].amount;\n\t\t\t\t\t\tmail_rewark.itemId = data[i].recItems[k].itemId;\n\t\t\t\t\t\tmailData.reward.push(mail_rewark);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//设置邮件的领取数据\n\tpublic setMailBRecData(data: any): void {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tfor (let j = 0; j < this.mailsData.list.length; j++) {\n\t\t\t\tlet mailData = this.mailsData.list[j];\n\t\t\t\tif (data[i] == mailData.id) {\n\t\t\t\t\tmailData.bReaded = true;\n\t\t\t\t\tmailData.bRec = true;\n\t\t\t\t\tmailData.reward = [];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (data.length > 1) {\n\t\t\tthis.isAllMailRecRewark = true;\n\t\t} else {\n\t\t\tthis.isAllMailRecRewark = false;\n\t\t}\n\t}\n\n\t//设置宝箱数据\n\tpublic setBoxesData(data: any): void {\n\t\tif (data == null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.boxesRewark = data;\n\t}\n\n\t//删除邮件数据\n\tpublic delMailData(data: any): void {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tlet delId = data[i];\n\t\t\tfor (let j = 0; j < this.mailsData.list.length; j++) {\n\t\t\t\tlet mailData = this.mailsData.list[j];\n\t\t\t\tif (delId == mailData.id) {\n\t\t\t\t\tthis.mailsData.list.splice(j, 1);\n\t\t\t\t\tlet mail: mail = <mail>{};\n\t\t\t\t\tmail.id = null;\n\t\t\t\t\tmail.bReaded = false;\n\t\t\t\t\tmail.bRec = false;\n\t\t\t\t\tmail.title = null;\n\t\t\t\t\tmail.sendTime = null;\n\t\t\t\t\tmail.residueTime = null;\n\t\t\t\t\tmail.content = null;\n\t\t\t\t\tmail.reward = [];\n\t\t\t\t\tthis.mailsData.list.push(mail);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.mailCount -= data.length;\n\t}\n\n\t//新增邮件时刷新邮件数据\n\tpublic refreshMailsData(data: any): void {\n\n\t}\n\n\t//获取全部邮件id\n\tpublic getAllMailId(): number[] {\n\t\tlet list = [];\n\t\tfor (let i = 0; i < this.mailsData.list.length; i++) {\n\t\t\tlet mailData = this.mailsData.list[i];\n\t\t\tif (mailData.id) {\n\t\t\t\tlist.push(mailData.id);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\n\t//时间戳转换\n\tpublic changeTimeStamp(time: number): string {\n\t\tlet date = new Date(time);\n\t\tlet y = date.getFullYear().toString();\n\t\tlet m = (date.getMonth() + 1).toString();\n\t\tlet d = date.getDate().toString();\n\t\treturn y + '-' + m + '-' + d;\n\t}\n\n\t//获取剩余天数\n\tpublic getRemainingTiem(time: number): number {\n\t\tlet nowTime = new Date().getTime();\t\t\t\t\t\t\t\t\t//当前时间戳\n\t\tlet spendTiem = (nowTime - time) / 1000;\t\t\t\t\t\t\t//花费的秒数\n\t\tlet allTime = 30 * 24 * 3600;\t\t\t\t\t\t\t\t\t\t//总的30天秒数\t\t\n\t\tlet remainingTime = (allTime - spendTiem) / 24 / 3600;\n\t\treturn Math.floor(remainingTime) + 1;\n\t}\n}"]}