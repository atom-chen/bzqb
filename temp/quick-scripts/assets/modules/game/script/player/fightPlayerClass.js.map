{"version":3,"sources":["fightPlayerClass.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\modules\\game\\script\\player","sourcesContent":["import Emitter from \"../../../../framework/modules/Emitter\";\nimport BaseBodyFight from \"../baseClass/BaseBodyFight\";\nimport effectBuffMgr from \"../effectBuff/effectBuffMgr\";\nimport PlayerData from \"../modles/PlayerData\";\nimport ShootData from \"../modles/ShootData\";\nimport fightPlayerModle from \"./fightPlayerModle\";\nimport fightTool from \"../common/fightTool\";\n\nimport fightCardFactory from \"../cardFactory/fightCardFactory\";\n\n// 地图管理器\nimport MapMgr from \"../sceneMgr/mapMgr\";\n// 地图管理器\nlet mapMgr:MapMgr = MapMgr.getInstance();\n/*\nauthor: 黄凯\n日期:2018-11-19\n*/\nlet emitter = Emitter.getInstance();\n\nimport config from \"../common/gameConfig\";\n\nconst { \n\tnetFrame , \n\tfightEvent , \n\tmissileType , \n\twaitTime , \n\tplayerConfig ,\n\tmissileBuffType , \n\tshootStartPoi \n} = config;\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class fightPlayerClass extends BaseBodyFight{\n\t// 玩家数据模型\n\tplayerModle:fightPlayerModle;\n\t// 是否是我的操作回合\n\tprivate myTrunBool:boolean = false;\n\n\t@property(cc.Sprite)\n\tuiPlayerHp:cc.Sprite = null;\n\n\tconstructor(){\n\t\tsuper();\n\t\t// 玩家真实位置\n\t\t// this.realPoi = {};\n\t\t// 玩家数据模型\n\t\tthis.playerModle = new fightPlayerModle();\n\t}\n\n\t// 初始化\n\tinit(playerData:PlayerData):void{\n\t\tthis.resetPoi(playerData.realPoi);\n\t\tthis.playerModle.init(playerData);\n\t}\n\n\t// 爆炸后重新获取一次地图位置\n\tpublic resetPoi(realPoi:any = null){\n\t\trealPoi || (realPoi = this.getPlayerRealPoi())\n\t\tlet poi = new cc.Vec2(\n\t\t\tMath.round(realPoi.x),\n\t\t\tMath.round(realPoi.y)\n\t\t);\n\t\tpoi = mapMgr.getNextPoint(poi,0,0);\n\t\tthis.node.x = poi.x;\n\t\tthis.node.y = poi.y;\n\t\tthis.node[\"realPoi\"] = {};\n\t\tthis.node[\"realPoi\"].x = poi.x;\n\t\tthis.node[\"realPoi\"].y = poi.y;\n\t}\n\n\tpublic getPlayerCardList():any{\n\t\treturn this.playerModle.getPlayerCardList();\n\t}\n\n\t// 通过玩家流程顺序 设置初始卡牌能量\n\tpublic setCardPower(index:number):void{\n\t\tthis.playerModle.setCardPower(index);\n\t}\n\n\t// 获取当前是否是我的回合\n\tpublic getIsMyTrun():boolean{\n\t\treturn this.myTrunBool;\n\t}\n\n\t// 获取玩家真实位置\n\tpublic getPlayerRealPoi():any{\n\t\treturn this.node[\"realPoi\"];\n\t}\n\n\t// 获取行动能量值\n\tpublic getMovePower():number{\n\t\treturn this.playerModle.getMovePower();\n\t}\n\n\t// 该玩家的回合开始了\n\tpublic startTrun(){\n\t\t// 是否到我的回合\n\t\tthis.myTrunBool = true;\n\t\t// 对我的数据模型进行还原\n\t\tthis.playerModle.myTurn();\n\t\t// 检测该玩家是否会被跳过\n\t\tif(this.playerModle.checkIsSkip()){\n\t\t\tthis.changePrecess();\n\t\t}\n\t}\n\n\t// 切换游戏流程\n\tprivate changePrecess(){\n\t\tthis.myTrunBool = false;\n\t\temitter.emit(fightEvent.changeProcess);\n\t}\n\n\t// 扣血\n\tpublic subHp(hp:number){\n\t\tthis.playerModle.subHp(hp);\n\t\tthis.changeHpUi();\n\t}\n\n\t// 加血\n\tpublic addHp(hp:number){\n\t\tthis.playerModle.addHp(hp);\n\t\tthis.changeHpUi();\n\t}\n\n\t// 显示最终的hp增量\n\tprivate changeHpUi(){\n\t\tlet range = this.playerModle.getHpRange();\n\t\tthis.uiPlayerHp.fillRange = range;\n\t}\n\n\t// 获取卡牌能量值\n\tpublic getCardPower():number{\n\t\treturn this.playerModle.getCardPower();\n\t}\n\n\t// 玩家移动移动方向\n\tpublic move(direction:number):void{\n\t\t// TODO 玩家行动\n\t\tif(this.playerModle.checkCanMove()){\n\t\t\t// 玩家移动\n\t\t\tlet newPoi = mapMgr.getNextPoint(this.node[\"realPoi\"],direction,1);\n\t\t\tlet myPoi = this.getPlayerRealPoi();\n\t\t\tlet vec = {\n\t\t\t\tx:newPoi.x - myPoi.x,\n\t\t\t\ty:newPoi.y - myPoi.y,\n\t\t\t};\n\t\t\t// 设置玩家仰角\n\t\t\tlet rotation = this.getPlayerAngle(direction);\n\t\t\tthis.playerModle.nowElevation = rotation;\n\t\t\t// if(this.checkCanMoveToAngle(direction,rotation)){\n\t\t\tif(vec.y <= 2){\n\t\t\t\tthis.node[\"realPoi\"] = newPoi;\n\t\t\t}\n\t\t\t// 扣除能量\n\t\t\tthis.playerModle.subMovePower();\n\t\t}else{\n\t\t\tconsole.log(\"没有能量了\");\n\t\t}\n\t}\n\n\t// 获取玩家当前角度\n\tpublic getPlayerElevation(){\n\t\treturn this.playerModle.nowElevation;\n\t}\n\n\t// 仰角检测功能\n\tgetPlayerAngle(direction:number){\n\t\tlet realPoi = this.getPlayerRealPoi();\n\t\tlet poi1 = mapMgr.getNextPoint(realPoi,-1,15);\n\t\tlet poi2 = mapMgr.getNextPoint(realPoi, 1,15);\n\t\tlet newPoi:any = {};\n\t\tswitch(direction){\n\t\t\tcase 1:\n\t\t\tnewPoi.x = poi2.x - poi1.x;\n\t\t\tnewPoi.y = poi2.y - poi1.y;\n\t\t\tbreak;\n\t\t\tcase -1:\n\t\t\tnewPoi.x = poi1.x - poi2.x;\n\t\t\tnewPoi.y = poi1.y - poi2.y;\n\t\t\tbreak;\n\t\t}\n\t\tlet rotation = fightTool.getAngleByVector(newPoi.x, newPoi.y);\n\t\treturn rotation;\n\t}\n\n\t// \n\tcheckCanMoveToAngle(direction:number,rotation:number){\n\t\tswitch(direction){\n\t\t\tcase 1:\n\t\t\t\tif(rotation < 45){\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\tbreak;\n\t\t\tcase -1:\n\t\t\tif(rotation > 135){\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t}\n\n\n\t// 0 不使用 1使用\n\tchangePlane(typeNum:number):void{\n\t\tthis.playerModle.changePlane(typeNum);\n\t}\n\n\t// 射击\n\tshootMis(poi:any):void{\n\t\t// TODO 根据自身配置生成炮弹\n\t\tlet shootData:ShootData = new ShootData();\n\t\tshootData.shootPoi = poi;\n\t\tlet shootPoi = shootData.shootPoi;\n\t\tlet startPoi = new cc.Vec2(this.node[\"realPoi\"].x,this.node[\"realPoi\"].y);\n\t\tstartPoi.y += shootStartPoi;\n\n\t\t// 通过玩家属性配置当前炮弹类型\n\t\tlet dataObj = {\n\t\t\t// 炮弹类型\n\t\t\tmissileType:missileType.normal, \n\t\t\t// 发射向量\n\t\t\tshootPoi:shootPoi, \n\t\t\t// 发射点\n\t\t\tstartPoi:startPoi, \n\t\t\t// 当前威力\n\t\t\tpower:this.playerModle.getNowAtkPower(), \n\t\t\t// 当前座位id\n\t\t\tseatId:this.playerModle.seatId,\n\t\t\t// 连发次数\n\t\t\tcontinuousFire:this.playerModle.continuousFire,\n\t\t\t// 分裂次数\n\t\t\tdivisionFire:this.playerModle.divisionFire,\n\t\t\t// TODO 扣血效果还是其它效果\n\t\t\tmissileBuffType:missileBuffType.sub,\n\t\t\t// TODO 椭圆值\n\t\t\tellipseRange:300\n\t\t};\n\n\t\t// 如果使用飞机\n\t\tif(this.playerModle.isPlane){\n\t\t\tdataObj.missileType = missileType.plane;\n\t\t\tdataObj.continuousFire = 1;\n\t\t\tdataObj.divisionFire = 1;\n\t\t}\n\t\t// 构造数据\n\t\tshootData.init(dataObj);\n\t\t// 触发导弹发射事件\n\t\temitter.emit(fightEvent.onMissileShoot, shootData);\n\t\t// 发射后切换流程\n\t\tthis.changePrecess();\n\n\t}\n\n\t// 玩家举枪瞄准角度\n\tchangeAngle(angle:number){\n\n\t}\n\n\t// 使用卡牌 是否成功\n\tuseCard(cardNum:number):boolean{\n\t\t// 卡牌工厂处理该玩家属性 使用成功\n\t\tif(this.playerModle.useCard(cardNum)){\n\t\t\tfightCardFactory.doMain(this.playerModle , cardNum);\n\t\t\t// 删除该牌并刷新界面\n\t\t\treturn true;\n\t\t};\n\t\treturn false;\n\t\t// 显示玩家使用的卡牌\n\t}\n\n\t// 网络帧驱动\n\tnetFrame(){\n\t\t// TODO 判断是不是自己的行动回合\n\t\tif(this.myTrunBool){\n\t\t\temitter.emit(fightEvent.updateCountDown,this.playerModle.getSecond());\n\t\t\t// 判断行动帧是否为0 为0时 玩家操作超时 切换玩家\n\t\t\tif(this.playerModle.checkIsTimeout()){\n\t\t\t\t// 切换游戏流程\n\t\t\t\tthis.changePrecess();\n\t\t\t}\n\t\t\t// 行动帧减少\n\t\t\tthis.playerModle.goFrame();\n\t\t}\n\t\tsuper.netFrame();\n\t}\n\n\t// update\n\tnetUpdate(dt){\n\t\tsuper.netUpdate(dt);\n\t}\n\n}\n\n"]}