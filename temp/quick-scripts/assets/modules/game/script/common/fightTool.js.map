{"version":3,"sources":["fightTool.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\modules\\game\\script\\common","sourcesContent":["import fightRandomSeed from \"../common/fightRandomSeed\";\n// 随机数\nlet randomSeed = fightRandomSeed.getInstance();\nexport default class tool {\n\n    static PI:number = 3.14;\n    // 乱序\n    static shuffle(arr) {\n        var len = arr.length;\n        for (var i = 0; i < len - 1; i++) {\n            var index = Math.floor(randomSeed.random() * (len - i));\n            var temp = arr[index];\n            arr[index] = arr[len - i - 1];\n            arr[len - i - 1] = temp;\n        }\n        return arr;\n    }\n\n    static randomValue(max , min){\n        let time = ((randomSeed.random()*(max-min)  + min) * 1000)\n        return time;\n    }\n\n    // 数组随机获取\n    static randomPick(arr, len){\n        if(arr.length <= len){\n            console.error(\"使用错误\");\n            return ;\n        }\n        let newArr = tool.shuffle(arr.slice(0));\n        return newArr.splice(0,len);\n    }\n\n    // 找出两个数组的差值数组\n    static differenceArray(arrOrg , arr){\n        let newArr = [];\n        for(let i = 0;i < arrOrg.length;i++){\n            let isInArr = false;\n            for(let s = 0;s < arr.length;s++){\n                if(arr[s] == arrOrg[i]){\n                    isInArr = true;\n                }\n            }\n            if(!isInArr){\n                newArr.push(arrOrg[i]);\n            }\n        }\n        return newArr;\n    }\n\n    // 选择排序\n    static selectSort(arr , useFun){\n        var len = arr.length;\n        var temp;\n        for(var i = 0;i < len-1 ; i++){\n            for(var j = i+1 ; j < len ; j++){\n                let uu = useFun(arr[i]);\n                let yy = useFun(arr[j]);\n                if(uu < yy){\n                    temp = arr[j];\n                    arr[j] = arr[i];\n                    arr[i] = temp;\n                }\n            }\n        }\n        return arr;\n    }\n\n\n    // 返回一个类椭圆圈\n    static createPoint(width,realPoi) {\n        let poi = {\n            x:Math.round(realPoi.x),\n            y:Math.round(realPoi.y)\n        }\n        // console.log(\"createPoint++++++\",poi);\n        // 计算points点为信息\n        let height = Math.round(width/3);\n        let poi1 = {\n            x:-height+poi.x,\n            y:-width+poi.y\n        };\n        let poi2 = {\n            x:height+poi.x,\n            y:-width+poi.y\n        };\n        let poi3 = {\n            x:width+poi.x,\n            y:0+poi.y\n        };\n        let poi4 = {\n            x:height+poi.x,\n            y:height+poi.y\n        };\n        let poi5 = {\n            x:-height+poi.x,\n            y:height+poi.y\n        };\n        let poi6 = {\n            x:-width+poi.x,\n            y:0+poi.y\n        };\n        let points = [];\n        points.push(poi1);\n        points.push(poi2);\n        points.push(poi3);\n        points.push(poi4);\n        points.push(poi5);\n        points.push(poi6);\n        return points;\n    }\n\n    // 点的碰撞检测\n    static pointInPolygon (point, polygon) {\n        var inside = false;\n        var x = point.x;\n        var y = point.y;\n\n        var length = polygon.length;\n\n        for ( var i = 0, j = length-1; i < length; j = i++ ) {\n            var xi = polygon[i].x, yi = polygon[i].y,\n                xj = polygon[j].x, yj = polygon[j].y,\n                intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\n            if ( intersect ) inside = !inside;\n        }\n\n        return inside;\n    }\n\n    // 获取向量的夹角\n    static getAngleByVector(vecX, vecY){\n        if (vecY === 0) {\n            if (vecX < 0) {\n                return 180;\n                // return 270;\n            } else if (vecX > 0) {\n                return 0;\n                // return 90;\n            }\n            return 0;\n        }\n        if (vecX === 0) {\n            if (vecY >= 0) {\n                return 270;\n                // return 0;\n            } else if (vecY < 0) {\n                return 90;\n                // return 180;\n            }\n        }\n        var tan_yx = Math.abs(vecY) / Math.abs(vecX);\n        var angle = 0;\n        // 第二象限\n        if (vecY > 0 && vecX < 0) {\n            angle = Math.round(180 - (1000 * Math.atan(tan_yx) * 180 / (tool.PI * 1000)));\n            // 第一象限\n        } else if (vecY > 0 && vecX > 0) {\n            angle = Math.round(1000 * Math.atan(tan_yx) * 180 / (1000 * tool.PI));\n            // 第三象限\n        } else if (vecY < 0 && vecX < 0) {\n            angle = Math.round(180 + 1000 * Math.atan(tan_yx) * 180 / (1000 * tool.PI));\n            // 第四象限\n        } else if (vecY < 0 && vecX > 0) {\n            angle = Math.round(360 - 1000 * Math.atan(tan_yx) * 180 / (1000 * tool.PI));\n        }\n\n        return angle;\n    }\n\n}\n\t"]}