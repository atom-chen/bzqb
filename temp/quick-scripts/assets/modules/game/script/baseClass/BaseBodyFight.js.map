{"version":3,"sources":["BaseBodyFight.ts"],"names":[],"mappings":";;;;;AAAA,iEAA4D;AAC5D,mDAA0C;AAC1C,IAAI,kBAAkB,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAE/C,IAAA,4CAAU,CAAY;AAExB,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAC5C;;;EAGE;AAGF;IAA2C,iCAAY;IAAvD;;IAgCA,CAAC;IA9BG,kBAAkB;IACjB,UAAU;IACX,IAAI;IACJ,eAAe;IACf,gCAAQ,GAAR;QACC,iBAAO,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACjE,iBAAO,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;QACnE,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAG,QAAQ,EAAC;YACR,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC5C;IACF,CAAC;IACD,SAAS;IACT,gCAAQ,GAAR;IAEA,CAAC;IACD,YAAY;IACZ,iCAAS,GAAT,UAAU,EAAE;QACX,IAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC;YACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC1C;IACF,CAAC;IACD,iCAAS,GAAT;QACC,iBAAO,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACpD,iBAAO,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;QACrD,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAG,QAAQ,EAAC;YACR,kBAAkB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;SAC/C;IACF,CAAC;IA/BgB,aAAa;QADjC,OAAO;OACa,aAAa,CAgCjC;IAAD,oBAAC;CAhCD,AAgCC,CAhC0C,EAAE,CAAC,SAAS,GAgCtD;kBAhCoB,aAAa","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\modules\\game\\script\\baseClass","sourcesContent":["import Emitter from \"../../../../framework/modules/Emitter\";\nimport config from \"../common/gameConfig\";\nlet wmCollisionManager = require(\"hkCollisionManager\");\n\nconst { fightEvent } = config;\n\nconst { ccclass, property } = cc._decorator;\n/*\nauthor: 黄凯\n日期:2018-11-19\n*/\n\n@ccclass\nexport default class BaseBodyFight extends cc.Component {\n\n    // constructor() {\n    \t// super()\n    // }\n    // realPoi:any;\n    onEnable():void{\n    \tEmitter.getInstance().on(fightEvent.netFrame,this.netFrame,this);\n    \tEmitter.getInstance().on(fightEvent.netUpdate,this.netUpdate,this);\n    \tlet collider = this.getComponent(cc.Collider);\n    \tif(collider){\n        \twmCollisionManager.addCollider(collider);\n    \t}\n    }\n    // 网络帧数驱动\n    netFrame(){\n    \t\n    }\n    // TODO 插值算法\n    netUpdate(dt){\n    \tif(this.node[\"realPoi\"]){\n    \t\tthis.node.position = this.node[\"realPoi\"];\n    \t}\n    }\n    onDisable():void{\n    \tEmitter.getInstance().off(fightEvent.netFrame,this);\n    \tEmitter.getInstance().off(fightEvent.netUpdate,this);\n    \tlet collider = this.getComponent(cc.Collider);\n    \tif(collider){\n        \twmCollisionManager.removeCollider(collider);\n    \t}\n    }\n}"]}