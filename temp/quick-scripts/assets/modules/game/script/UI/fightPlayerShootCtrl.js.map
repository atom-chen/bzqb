{"version":3,"sources":["fightPlayerShootCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\modules\\game\\script\\UI","sourcesContent":["import Emitter from \"../../../../framework/modules/Emitter\";\nimport PlayerCtrlData from \"../modles/PlayerCtrlData\";\nimport config from \"../common/gameConfig\";\nimport HkPhysics from \"../physics/hkPhysics\";\n\nlet playerCtrlData = PlayerCtrlData.getInstance();\nlet emitter = Emitter.getInstance();\n/*\nauthor: 黄凯\n日期:2018-11-19\n*/\nconst { fightEvent } = config;\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class fightPlayerShootCtrl extends cc.Component {\n\n\t@property(cc.Node)\n    movePowerBg : cc.Node = null;\n\n    @property(cc.Sprite)\n    movePower : cc.Sprite = null;\n\n    @property(cc.Node)\n    circleNode : cc.Node = null;\n\n    // 是否能操作我的玩家\n    canCtrlMyPlayer:boolean = false;\n    // 绘图组件\n    guideLine:cc.Graphics;\n\n    onLoad(){\n    \t// 圆形区域\n    \tthis.node.on(cc.Node.EventType.TOUCH_START,this.touchStart,this);\n    \tthis.node.on(cc.Node.EventType.TOUCH_MOVE,this.touchMove,this);\n    \tthis.node.on(cc.Node.EventType.TOUCH_END,this.touchEnd,this);\n\n    \t// 绑定我的ui情况\n    \temitter.on(fightEvent.taggerMyCtrlUi,this.taggerMyCtrlUi,this);\n    \t// emitter.on(fightEvent.moveMyCtrlUi,this.moveCtrlPoi,this);\n    \temitter.on(fightEvent.updateMoveRange,this.updateMoveRange,this);\n\n        this.guideLine = this.node.addComponent(cc.Graphics);\n    }\n\n\n    public taggerMyCtrlUi(tagger:string):void{\n    \tswitch(tagger){\n    \t\tcase \"show\":\n    \t\tthis.movePowerBg.active = true;\n    \t\tthis.circleNode.active = true;\n            this.canCtrlMyPlayer = true;\n    \t\tbreak;\n    \t\tcase \"hide\":\n    \t\tthis.movePowerBg.active = false;\n    \t\tthis.circleNode.active = false;\n        \tthis.guideLine.clear();\n            this.canCtrlMyPlayer = false;\n            emitter.emit(fightEvent.setZoomRatio,1);\n    \t\tbreak;\n    \t}\n    }\n\n    // 移动位置\n    public moveCtrlPoi(poi:any):void{\n    \tthis.playerRealPoi = poi;\n    \t// console.log(\"this.playerRealPoi1\",poi)\n    \t// this.playerRealPoi = this.getFatherPoi(poi);\n    \t// console.log(\"this.playerRealPoi\",this.playerRealPoi)\n    \tthis.moveCircle(this.playerRealPoi);\n    \tthis.movePowerRang(this.playerRealPoi);\n    }\n\n    // 修改移动能量\n    public updateMoveRange(num:number):void{\n    \tthis.movePower.fillRange = num;\n    }\n\n    // 移动能量条\n    public movePowerRang(poi:any):void{\n    \tthis.movePowerBg.x = poi.x;\n    \tthis.movePowerBg.y = poi.y;\n    }\n\n\n    // 是否点击了操作圆\n    isTouchCricle:boolean;\n    // 开始位置\n\tstartPoint:any;\n\t// 结束点\n    endPoint:any;\n    // 玩家当前的真实位置\n    playerRealPoi:any;\n    // 最小操作距离\n    minDistance:number = 80;\n\n    // 更新玩家位置\n    moveCircle(poi:any){\n    \tthis.circleNode.x = poi.x;\n    \tthis.circleNode.y = poi.y;\n    }\n\n    touchStart(event) {\n        if(!this.canCtrlMyPlayer){return;}\n    \tthis.playerRealPoi = this.node.position;\n        this.startPoint = event.getLocation();\n        this.endPoint = this.startPoint;\n        this.isTouchCricle = true;\n    }\n\n    touchMove(event) {\n        if(!this.canCtrlMyPlayer){return;}\n        this.endPoint = event.getLocation();\n        let newPoi = this.getOffsetPoi();\n        let radian = Math.atan2(newPoi.y, newPoi.x);\n        let rotation = -radian * 180 / Math.PI;\n        playerCtrlData.elevation = rotation;\n\n\n    \tlet disTance = this.distance(this.startPoint, this.endPoint);\n        if(disTance > this.minDistance){\n            this.showGuideLine(this.playerRealPoi , newPoi);\n        }else{\n            this.guideLine.clear();\n        }\n        this.changeRatio(disTance);\n\n    }\n\n    // 相机焦距\n    changeRatio(disTance){\n    \tlet ratio;\n    \tif(disTance > 100){\n    \t\tratio = 1 - (disTance - 100)/800;\n    \t}else{\n    \t\tratio = 1;\n    \t}\n        emitter.emit(fightEvent.setZoomRatio,ratio);\n    \temitter.emit(fightEvent.setNowLerpPoi,this.node.parent.position);\n    }\n\n    touchEnd() {\n        if(!this.canCtrlMyPlayer){return;}\n    \tif(!this.isTouchCricle){ return; }\n        this.isTouchCricle = false;\n    \tlet fuck = this.getOffsetPoi();\n    \tlet disTance = this.distance(this.startPoint, this.endPoint);\n\t\t// 距离过小取消操作\n    \tif(disTance < this.minDistance){\n    \t\t// 取消\n        \tthis.guideLine.clear();\n    \t\tconsole.log(\"取消\");\n    \t\treturn ;\n    \t}\n        // console.log(\"fuck\", fuck.x, fuck.y);\n        playerCtrlData.setShootPoi(fuck);\n\n        this.startPoint = null;\n        this.endPoint = null;\n    }\n\n    // 获取偏移位置\n    getOffsetPoi(){\n    \treturn {\n        \tx:Math.round(this.startPoint.x - this.endPoint.x)*2,\n        \ty:Math.round(this.startPoint.y - this.endPoint.y)*2,\n        };\n    }\n\n    // 距离\n    distance(poi1 , poi2){\n    \treturn Math.abs(Math.sqrt(Math.pow(poi2.x - poi1.x,2) + Math.pow(poi2.y - poi1.y,2)));\n    }\n\n    // 获取并绘制辅助线\n    showGuideLine(poi , force){\n        var points = HkPhysics.getBodyGuideLine(poi,force);\n        this.guideLine.clear();\n        this.guideLine.lineWidth = 0;\n        for(var i = points.length-1 ; i >= 0 ; i--){\n            this.guideLine.circle(points[i].x,points[i].y, 9-i/2);\n            this.guideLine.fillColor = cc.color(30,30,30,100);\n            this.guideLine.fill();\n            this.guideLine.circle(points[i].x,points[i].y, 7-i/2);\n            this.guideLine.fillColor.fromHEX('#ffffff');\n            this.guideLine.fill();\n        }\n    }\n\n    onDestroy(){\n    \tthis.circleNode.off(cc.Node.EventType.TOUCH_START,this.touchStart,this);\n    \tthis.circleNode.off(cc.Node.EventType.TOUCH_MOVE,this.touchMove,this);\n    \tthis.node.off(cc.Node.EventType.TOUCH_END,this.touchEnd,this);\n    }\n\n\n\t// realPoi:any;\n\t// startPoint:any;\n //    endPoint:any;\n\t// // 仰角限制\n //    onLoad () {\n //    \tthis.node.on(cc.Node.EventType.TOUCH_START,this.touchStart,this);\n //    \tthis.node.on(cc.Node.EventType.TOUCH_MOVE,this.touchMove,this);\n //    \tthis.node.on(cc.Node.EventType.TOUCH_END,this.touchEnd,this);\n //    \tthis.startPoint = null;\n //    \tthis.endPoint = null;\n //    }\n\n //    // TODO 世界坐标等转换情况\n //    move(poi:any){\n //    \tthis.realPoi.x = poi.x;\n //    \tthis.realPoi.y = poi.y;\n //    \tthis.node.x = poi.x;\n //    \tthis.node.y = poi.y;\n //    }\n\n //    touchStart(event) {\n //        this.startPoint = event.getLocation();\n //    }\n\n //    touchMove(event) {\n //        this.endPoint = event.getLocation();\n //        let newPoi = {\n //        \tx:this.endPoint.x - this.startPoint.x,\n //        \ty:this.endPoint.y - this.startPoint.y,\n //        }\n //        let radian = Math.atan2(newPoi.y, newPoi.x);\n //        let rotation = -radian * 180 / Math.PI;\n //        playerCtrlData.elevation = rotation;\n //    \tconsole.log(\"rotation++++\",rotation);\n //    }\n\n //    touchEnd() {\n //    \tlet fuck = {\n //    \t\tx:0,\n //    \t\ty:0\n //    \t};\n //    \tlet disTance = this.distance(this.startPoint, this.endPoint);\n\t// \tconsole.log(\"disTance+++\",disTance);\n\n //    \tif(disTance < 50){\n //    \t\t// 取消\n //    \t\tconsole.log(\"取消\");\n //    \t\treturn ;\n //    \t}\n //        fuck.x = Math.round(this.startPoint.x - this.endPoint.x);\n //        fuck.y = Math.round(this.startPoint.y - this.endPoint.y);\n //        console.log(\"fuck\", fuck.x, fuck.y);\n\n\n //        this.startPoint = null;\n //        this.endPoint = null;\n //    }\n\n //    distance(poi1 , poi2){\n //    \treturn Math.abs(Math.sqrt(Math.pow(poi2.x - poi1.x,2) + Math.pow(poi2.y - poi1.y,2)));\n //    }\n\n\n\n}\n"]}