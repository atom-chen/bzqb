{"version":3,"sources":["mapMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\modules\\game\\script\\sceneMgr","sourcesContent":["export default class MapMgr {\n    foreTex: cc.RenderTexture;\n    foreNode: cc.Node;\n    foreWidth: number;\n    foreHeight: number;\n    pixels: Uint8Array;\n    singlePixels: Uint8Array;\n    craterPixels: Uint8Array;\n    craterWidth: number;\n    craterHeight: number;\n    // 偏移量\n    offectX:number;\n    offectY:number;\n\n    public initMap(fatherNode:cc.Node,node: cc.Node, tex: cc.Texture2D, craterTex: cc.Texture2D,): void {\n        this.foreNode = node;\n        this.offectX = fatherNode.x;\n        this.offectY = fatherNode.y;\n        this.foreTex = new cc.RenderTexture();\n        this.foreTex.initWithSize(tex.width, tex.height);\n        this.foreTex.drawTextureAt(tex, 0, 0);\n        this.foreNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.foreTex);\n        this.foreWidth = tex.width;\n        this.foreHeight = tex.height;\n        this.pixels = this.foreTex.readPixels();\n        this.singlePixels = new Uint8Array(this.pixels.length / 4);\n        for (let i = 0; i < this.singlePixels.length; ++i) {\n            this.singlePixels[i] = this.pixels[4 * i + 3] > 0 ? 1 : 0;\n        }\n\n        let newTex = new cc.RenderTexture();\n        newTex.initWithSize(craterTex.width, craterTex.height);\n        newTex.drawTextureAt(craterTex, 0, 0);\n        this.craterPixels = newTex.readPixels();\n        this.craterWidth = craterTex.width;\n        this.craterHeight = craterTex.height;\n    }\n\n    getLocalPoi(point:cc.Vec2){\n        let localPoint = this.foreNode.convertToNodeSpace(point);\n        localPoint.x += this.offectX;\n        localPoint.y += this.offectY;\n        return localPoint;\n    }\n\n    getWorldPoi(point:cc.Vec2){\n        let worldPoi = this.foreNode.convertToWorldSpace(point);\n        worldPoi.x -= this.offectX;\n        worldPoi.y -= this.offectY;\n        return worldPoi;\n    }\n\n    public digHole(worldPoint: cc.Vec2,ellipseRange:number): void {\n        let localPoint = this.getLocalPoi(worldPoint);\n        let sss = ellipseRange/150;\n        let poi = {\n            x:ellipseRange/2,\n            y:Math.round(ellipseRange/3)\n        };\n        let craterWidth = Math.round(ellipseRange*sss);\n        let craterHeight = Math.round(poi.y*sss);\n        // let localPoint = worldPoint;\n        let pixelX = localPoint.x, pixelY = this.foreHeight - localPoint.y;\n        let len = this.craterPixels.length / 4;\n        console.time(\"弹坑\");\n        for (let i = 0; i < len; ++i) {\n            let yInCrater = Math.floor(i / this.craterWidth), xInCrater = i - this.craterWidth * yInCrater;\n            let xInFore = Math.round(xInCrater - this.craterWidth / 2 + pixelX);\n            let yInFore = Math.round(yInCrater - this.craterHeight / 2 + pixelY);\n            let craterIdx = 4 * i + 3, foreIdx = 4 * (yInFore * this.foreWidth + xInFore) + 3;\n            if (Math.pow(xInCrater - this.craterWidth / 2, 2) / Math.pow(poi.x, 2) + Math.pow(yInCrater - this.craterHeight / 2, 2) / Math.pow(poi.y, 2) <= 1) {\n                this.pixels[foreIdx] = 0;\n                this.singlePixels[(yInFore * this.foreWidth + xInFore)] = 0;\n            } else if (this.craterPixels[craterIdx] > 0 && this.pixels[foreIdx] > 0) {\n                let c1 = this.pixels.slice(foreIdx - 3, foreIdx + 1);\n                let c2 = this.craterPixels.slice(craterIdx - 3, craterIdx + 1);\n                let blend = this._colorBlend(c1, c2);\n                for (let j = 0; j <= 3; ++j) {\n                    this.pixels[foreIdx - (3 - j)] = blend[j];\n                }\n            }\n        }\n        this.foreTex.initWithData(this.pixels, this.foreTex.getPixelFormat(), this.foreWidth, this.foreHeight);\n        console.timeEnd(\"弹坑\");\n    }\n\n    private _colorBlend(c1: Uint8Array, c2: Uint8Array): Uint8Array {\n        let blend = new Uint8Array(4);\n        let a1 = c1[3] / 255, a2 = c2[3] / 255;\n        let aBlend = a1 + a2 - a1 * a2;\n        for (let i = 0; i < 3; ++i) {\n            let n1 = c1[i] / 255, n2 = c2[i] / 255;\n            blend[i] = (n1 * a1 * (1 - a2) + n2 * a2) / aBlend * 255;\n        }\n        blend[3] = aBlend * 255;\n        return blend;\n    }\n\n    // 检测是否碰撞到包围盒\n    public checkCollideGround(point: cc.Vec2): boolean {\n        // let localPoint = this.foreNode.convertToNodeSpace(point);\n        let localPoint = this.getLocalPoi(point);\n        let x = localPoint.x, y = this.foreHeight - localPoint.y;\n        return !this._isEmpty(x, y);\n    }\n\n    // 获取下一个像素点\n    public getNextPoint(point: cc.Vec2, directX: number, step: number): cc.Vec2 {\n        let localPoint = this.getLocalPoi(point);\n        let foreX = localPoint.x, foreY = this.foreHeight - localPoint.y;\n        for (; step >= 0; step--) {\n            if (this._isEmpty(foreX, foreY + 1)) {\n                foreY = this._findNextY(foreX, foreY, 1);\n                break;\n            } else {\n                if (foreX > 0 && foreX < this.foreWidth) {\n                    foreX += directX;\n                } else {\n                    foreY = this._findNextY(foreX, foreY, -1);\n                    break;\n                }\n            }\n            if (step == 0) foreY = this._findNextY(foreX, foreY, -1);\n        }\n        return this.getWorldPoi(cc.v2(foreX, this.foreHeight - foreY));\n    }\n\n    // 寻找y点\n    private _findNextY(x: number, y: number, directY: number): number {\n        while (true) {\n            let temY = y + directY;\n            if (directY > 0 && !this._isEmpty(x, temY)) break;\n            if (directY < 0 && this._isEmpty(x, temY)) break;\n            y = temY;\n        }\n        return y;\n    }\n\n    private _isEmpty(x: number, y: number): boolean {\n        return !this.singlePixels[y * this.foreWidth + x];\n    }\n\n    private static _instance: MapMgr = null;\n    public static getInstance(): MapMgr {\n        if (MapMgr._instance == null) {\n            MapMgr._instance = new MapMgr();\n        }\n        return MapMgr._instance;\n    }\n}"]}