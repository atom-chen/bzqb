{"version":3,"sources":["taskBoxes.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\modules\\plaza\\script\\dailyTask","sourcesContent":["import BaseModel from \"../../../../framework/baseClass/BaseModel\";\nimport BaseView from \"../../../../framework/baseClass/BaseView\";\nimport BaseCtrl from \"../../../../framework/baseClass/BaseCtrl\";\nimport { activeBoxes } from \"../../../../manager/public/interface/iDailyTaskInfo\";\nimport TaskMgr from \"../../../../manager/public/taskMgr\";\n\n/*\nauthor: 陈斌杰\n日期:2018-11-23 13:55:44\n*/\n\n//MVC模块,\nconst { ccclass, property } = cc._decorator;\nlet ctrl: TaskBoxesCtrl;\n//模型，数据处理\nclass Model extends BaseModel {\n\tconstructor() {\n\t\tsuper();\n\t}\n\tpublic boxesData: activeBoxes = <activeBoxes>{};\n\n\t//设置活动宝箱数据\n\tpublic setActiveBoxesData(data: any): void {\n\t\tthis.boxesData = data;\n\t}\n\n\t//设置宝箱开启数据\n\tpublic setBoxesOpenState(data: any): void {\n\t\tthis.boxesData.isOpen = true;\n\t\tthis.boxesData.rewarks = [];\n\t\t\n\t}\n}\n//视图, 界面显示或动画，在这里完成\nclass View extends BaseView {\n\tprotected model: Model;\n\tprotected node: cc.Node;\n\tpublic ui = {\n\t\tboxesIco: ctrl.boxesIco,\t\t\t//活跃度宝箱图片\n\t\tactiveNum: ctrl.activeNum,\t\t\t//活跃度\n\t\tcircle_bg: ctrl.circle_bg,\t\t\t//圆圈背景\n\t\trewarkInfo: ctrl.rewarkInfo,\t\t//挂载奖励预制的节点\n\t\trewark: ctrl.rewark,\t\t\t\t//奖励预制\n\t}\n\tconstructor(model) {\n\t\tsuper(model);\n\t\tthis.node = ctrl.node;\n\t\tthis.initUi();\n\t}\n\t//初始化ui\n\tpublic initUi() {\n\n\t}\n\n\t//初始化活跃度宝箱UI\n\tpublic initActiveBoxesUI(): void {\n\t\tif (this.model.boxesData.id < 2000) {\n\t\t\tlet namePic = [3, 7, 14, 21];\n\t\t\tlet index = this.model.boxesData.id - 1001;\n\t\t\tlet name = null;\n\t\t\tif (this.model.boxesData.isOpen) {\n\t\t\t\tname = `openBox_${namePic[index]}`;\n\t\t\t} else {\n\t\t\t\tname = `box_${namePic[index]}`\n\t\t\t}\n\t\t\tthis.loadImage(name).then((sprf) => {\n\t\t\t\tthis.ui.boxesIco.spriteFrame = sprf;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.ui.circle_bg.active = false;\n\t\t\tthis.ui.activeNum.node.parent.width = 120;\n\t\t}\n\n\t\tthis.ui.activeNum.string = this.model.boxesData.condition.toString();\n\t}\n\n\t//显示宝箱奖励\n\tpublic showBoxesRewarks(): void {\n\t\tthis.ui.rewarkInfo.getChildByName(\"bg\").width = 80 * this.model.boxesData.rewarks.length;\n\t\tif (this.ui.rewarkInfo.active == true) {\n\t\t\tthis.ui.rewarkInfo.active = false;\n\t\t} else {\n\t\t\tthis.ui.rewarkInfo.active = true;\n\t\t}\n\t\tif (this.ui.rewarkInfo.childrenCount > 2) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0; i < this.model.boxesData.rewarks.length; i++) {\n\t\t\tlet boxData = this.model.boxesData.rewarks[i];\n\t\t\tlet boxNode = this.addPrefabNode(this.ui.rewark, this.ui.rewarkInfo);\n\t\t\tboxNode.x = -40 * (this.model.boxesData.rewarks.length - 1) + i * 80;\n\t\t\tboxNode.getComponent(\"boxRewark\").initTotalRewark(boxData);\n\t\t}\n\t}\n\n\t//刷新宝箱图片显示\n\tpublic refreshBoxesUI(): void {\n\t\tthis.initActiveBoxesUI();\n\t}\n}\n//c, 控制\n@ccclass\nexport default class TaskBoxesCtrl extends BaseCtrl {\n\tprotected view: View;\n\tprotected model: Model;\n\t//这边去声明ui组件\n\t@property(cc.Sprite)\n\tboxesIco: cc.Sprite = null;\n\t@property(cc.Label)\n\tactiveNum: cc.Label = null;\n\t@property(cc.Node)\n\tcircle_bg: cc.Node = null;\n\t@property(cc.Node)\n\trewarkInfo: cc.Node = null;\n\t@property(cc.Prefab)\n\trewark: cc.Prefab = null;\n\t//声明ui组件end\n\t//这是ui组件的map,将ui和控制器或试图普通变量分离\n\n\n\tonLoad() {\n\t\t// 控制器\n\t\tctrl = this;\n\t\t// 创建mvc模式中模型和视图\n\t\tthis.initMvc(Model, View);\n\t}\n\n\t//定义网络事件\n\tprotected defineNetEvents() {\n\t\tthis.n_events = {};\n\t}\n\t//定义全局事件\n\tprotected defineGlobalEvents() {\n\t\tthis.g_events = {};\n\t}\n\t//绑定操作的回调\n\tconnectUi() {\n\t\tthis.connect(\"click\", this.node, () => {\n\t\t\tif (this.model.boxesData.isOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (TaskMgr.getInstance().getIsCanOpenBoxes(this.model.boxesData.id)) {\n\t\t\t\tconsole.log(\"---------发送开启活跃度宝箱请求----------\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.view.showBoxesRewarks();\n\t\t}, \"点击活跃度宝箱显示奖励\");\n\t}\n\t//网络事件回调begin\n\t//end\n\t//全局事件回调begin\n\t//end\n\t//按钮或任何控件操作的回调begin\n\t//end\n\n\t//初始化活跃度宝箱\n\tpublic initActiveBoxe(data: any): void {\n\t\tthis.model.setActiveBoxesData(data);\n\t\tthis.view.initActiveBoxesUI();\n\t}\n\n\t//刷新宝箱显示\n\tpublic refreshBoxes(data: any): void {\n\t\tthis.model.setBoxesOpenState(data);\n\t\tthis.view.refreshBoxesUI();\n\t\tthis.openSubModule(\"gainBox\", true).then(script => {\n\t\t\tscript.setGainData(this.model.boxesData.rewarks);\n\t\t});\n\t}\n\n\tonDestroy() {\n\t\tsuper.onDestroy();\n\t}\n}"]}