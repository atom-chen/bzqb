{"version":3,"sources":["dailyTask.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\modules\\plaza\\script\\dailyTask","sourcesContent":["import BaseModel from \"../../../../framework/baseClass/BaseModel\";\nimport BaseView from \"../../../../framework/baseClass/BaseView\";\nimport BaseCtrl from \"../../../../framework/baseClass/BaseCtrl\";\nimport { activeBoxesList, dailyTaskList } from './../../../../manager/public/interface/iDailyTaskInfo';\nimport TaskMgr from \"../../../../manager/public/taskMgr\";\n\n\n/*\nauthor: 陈斌杰\n日期:2018-11-22 18:51:51\n*/\n\n//MVC模块,\nconst { ccclass, property } = cc._decorator;\nlet ctrl: DailyTaskCtrl;\n//模型，数据处理\nclass Model extends BaseModel {\n\tconstructor() {\n\t\tsuper();\n\t}\n\tpublic dailyTaskData: dailyTaskList = TaskMgr.getInstance().dailyTaskData;\t\t\t//每日任务数据\n\tpublic activeBoxesData: activeBoxesList = TaskMgr.getInstance().activeBoxesData;\t//活跃度宝箱数据\n}\n//视图, 界面显示或动画，在这里完成\nclass View extends BaseView {\n\tprotected model: Model;\n\tprotected node: cc.Node;\n\tpublic ui = {\n\t\tprogressBar: ctrl.progressBar,\t\t\t\t\t\t\t\t\t\t//活跃度\n\t\tprogressBoxes: ctrl.progressBoxes,\t\t\t\t\t\t\t\t\t//进度宝箱挂载节点\n\t\tactiveBoxes: ctrl.boxesRewark,\t\t\t\t\t\t\t\t\t\t//活跃度宝箱预制\n\t\ttaskContent: ctrl.taskContent,\t\t\t\t\t\t\t\t\t\t//任务预制挂载节点\n\t\ttask: ctrl.task,\t\t\t\t\t\t\t\t\t\t\t\t\t//任务预制\n\t\tbottomFrame: ctrl.bottomFrame,\t\t\t\t\t\t\t\t\t\t//底部节点\n\t\tactiveCount: ctrl.activeCount,\t\t\t\t\t\t\t\t\t\t//本周活跃度\n\t\tbtn_close: ctrl.btn_close,\t\t\t\t\t\t\t\t\t\t\t//关闭每日任务按钮\n\t}\n\tconstructor(model) {\n\t\tsuper(model);\n\t\tthis.node = ctrl.node;\n\t\tthis.initUi();\n\t}\n\t//初始化ui\n\tpublic initUi() {\n\t\tthis.refreshActivityUI();\n\t\tthis.initDailyTaskUI();\n\t\tthis.initActiveBoxesUI();\n\t}\n\n\t//初始化每日任务数据\n\tpublic initDailyTaskUI(): void {\n\t\tthis.ui.taskContent.height = this.model.dailyTaskData.list.length * 80;\n\t\tfor (let i = 0; i < this.model.dailyTaskData.list.length; i++) {\n\t\t\tlet taskData = this.model.dailyTaskData.list[i];\n\t\t\tlet taskNode = this.addPrefabNode(this.ui.task, this.ui.taskContent);\n\t\t\ttaskNode.y = -40 - i * 80;\n\t\t\ttaskNode.getComponent(\"task\").initDailyTask(taskData);\n\t\t}\n\t}\n\n\t//初始化活跃度宝箱\n\tpublic initActiveBoxesUI(): void {\n\t\tfor (let i = 0; i < this.model.activeBoxesData.list.length; i++) {\n\t\t\tlet boxesData = this.model.activeBoxesData.list[i];\n\t\t\tif (boxesData.id < 2000) {\n\t\t\t\tlet activeBoxesNode = this.addPrefabNode(this.ui.activeBoxes, this.ui.progressBoxes);\n\t\t\t\tactiveBoxesNode.x = 180 * i - 195;\n\t\t\t\tactiveBoxesNode.getComponent(\"taskBoxes\").initActiveBoxe(boxesData);\n\t\t\t} else {\n\t\t\t\tlet activeBoxesNode = this.addPrefabNode(this.ui.activeBoxes, this.ui.bottomFrame);\n\t\t\t\tactiveBoxesNode.x = 75 + (i - 4) * 225;\n\t\t\t\tactiveBoxesNode.y = 10;\n\t\t\t\tactiveBoxesNode.getComponent(\"taskBoxes\").initActiveBoxe(boxesData);\n\t\t\t}\n\t\t}\n\t}\n\n\t//刷新活跃度显示\n\tpublic refreshActivityUI(): void {\n\t\tthis.ui.progressBar.string = TaskMgr.getInstance().activity.toString();\n\t}\n\n\t//刷新活跃度进度条显示\n\tpublic refreshProgressBarUI(): void {\n\t\t\n\t}\n}\n//c, 控制\n@ccclass\nexport default class DailyTaskCtrl extends BaseCtrl {\n\tprotected view: View;\n\tprotected model: Model;\n\t//这边去声明ui组件\n\t@property(cc.Label)\n\tprogressBar: cc.Label = null;\n\t@property(cc.Node)\n\tprogressBoxes: cc.Node = null;\n\t@property(cc.Prefab)\n\tboxesRewark: cc.Prefab = null;\n\t@property(cc.Node)\n\tactiveCount: cc.Node = null;\n\t@property(cc.Node)\n\ttaskContent: cc.Node = null;\n\t@property(cc.Prefab)\n\ttask: cc.Prefab = null;\n\t@property(cc.Node)\n\tbottomFrame: cc.Node = null;\n\t@property(cc.Node)\n\tbtn_close: cc.Node = null;\n\t//声明ui组件end\n\t//这是ui组件的map,将ui和控制器或试图普通变量分离\n\n\n\tonLoad() {\n\t\t// 控制器\n\t\tctrl = this;\n\t\t// 创建mvc模式中模型和视图\n\t\tthis.initMvc(Model, View);\n\t}\n\n\t//定义网络事件\n\tprotected defineNetEvents() {\n\t\tthis.n_events = {};\n\t}\n\t//定义全局事件\n\tprotected defineGlobalEvents() {\n\t\tthis.g_events = {};\n\t}\n\t//绑定操作的回调\n\tconnectUi() {\n\t\tthis.connect(\"click\", this.ui.btn_close, () => {\n\t\t\tthis.closeModule(\"dailyTask\");\n\t\t}, \"关闭每日任务界面\");\n\t}\n\t//网络事件回调begin\n\t//end\n\t//全局事件回调begin\n\t//end\n\t//按钮或任何控件操作的回调begin\n\t//end\n\n\t// update(dt) {}\n\n\tonDestroy() {\n\t\tsuper.onDestroy();\n\t}\n}"]}